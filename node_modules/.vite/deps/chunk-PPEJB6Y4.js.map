{
  "version": 3,
  "sources": ["../../src/blots/scroll.ts", "../../src/formats/align.ts", "../../src/formats/color.ts", "../../src/formats/background.ts", "../../src/formats/code.ts", "../../src/formats/direction.ts", "../../src/formats/font.ts", "../../src/formats/size.ts", "../../src/modules/keyboard.ts", "../../src/modules/normalizeExternalHTML/normalizers/googleDocs.ts", "../../src/modules/normalizeExternalHTML/normalizers/msWord.ts", "../../src/modules/normalizeExternalHTML/index.ts", "../../src/modules/clipboard.ts", "../../src/modules/history.ts", "../../src/modules/uploader.ts", "../../src/modules/input.ts", "../../src/modules/uiNode.ts", "../../src/core.ts", "../../src/formats/indent.ts", "../../src/formats/blockquote.ts", "../../src/formats/header.ts", "../../src/formats/list.ts", "../../src/formats/bold.ts", "../../src/formats/italic.ts", "../../src/formats/link.ts", "../../src/formats/script.ts", "../../src/formats/strike.ts", "../../src/formats/underline.ts", "../../src/formats/formula.ts", "../../src/formats/image.ts", "../../src/formats/video.ts", "../../src/modules/syntax.ts", "../../src/modules/toolbar.ts", "../../src/ui/icons.ts", "../../src/ui/picker.ts", "../../src/ui/color-picker.ts", "../../src/ui/icon-picker.ts", "../../src/ui/tooltip.ts", "../../src/themes/base.ts", "../../src/themes/bubble.ts", "../../src/themes/snow.ts", "../../src/quill.ts"],
  "sourcesContent": ["import { ContainerBlot, LeafBlot, Scope, ScrollBlot } from 'parchment';\nimport type { Blot, Parent, EmbedBlot, ParentBlot, Registry } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Emitter from '../core/emitter.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport Block, { BlockEmbed, bubbleFormats } from './block.js';\nimport Break from './break.js';\nimport Container from './container.js';\n\ntype RenderBlock =\n  | {\n      type: 'blockEmbed';\n      attributes: AttributeMap;\n      key: string;\n      value: unknown;\n    }\n  | { type: 'block'; attributes: AttributeMap; delta: Delta };\n\nfunction isLine(blot: unknown): blot is Block | BlockEmbed {\n  return blot instanceof Block || blot instanceof BlockEmbed;\n}\n\ninterface UpdatableEmbed {\n  updateContent(change: unknown): void;\n}\n\nfunction isUpdatable(blot: Blot): blot is Blot & UpdatableEmbed {\n  return typeof (blot as unknown as any).updateContent === 'function';\n}\n\nclass Scroll extends ScrollBlot {\n  static blotName = 'scroll';\n  static className = 'ql-editor';\n  static tagName = 'DIV';\n  static defaultChild = Block;\n  static allowedChildren = [Block, BlockEmbed, Container];\n\n  emitter: Emitter;\n  batch: false | MutationRecord[];\n\n  constructor(\n    registry: Registry,\n    domNode: HTMLDivElement,\n    { emitter }: { emitter: Emitter },\n  ) {\n    super(registry, domNode);\n    this.emitter = emitter;\n    this.batch = false;\n    this.optimize();\n    this.enable();\n    this.domNode.addEventListener('dragstart', (e) => this.handleDragStart(e));\n  }\n\n  batchStart() {\n    if (!Array.isArray(this.batch)) {\n      this.batch = [];\n    }\n  }\n\n  batchEnd() {\n    if (!this.batch) return;\n    const mutations = this.batch;\n    this.batch = false;\n    this.update(mutations);\n  }\n\n  emitMount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_MOUNT, blot);\n  }\n\n  emitUnmount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_UNMOUNT, blot);\n  }\n\n  emitEmbedUpdate(blot: Blot, change: unknown) {\n    this.emitter.emit(Emitter.events.SCROLL_EMBED_UPDATE, blot, change);\n  }\n\n  deleteAt(index: number, length: number) {\n    const [first, offset] = this.line(index);\n    const [last] = this.line(index + length);\n    super.deleteAt(index, length);\n    if (last != null && first !== last && offset > 0) {\n      if (first instanceof BlockEmbed || last instanceof BlockEmbed) {\n        this.optimize();\n        return;\n      }\n      const ref =\n        last.children.head instanceof Break ? null : last.children.head;\n      // @ts-expect-error\n      first.moveChildren(last, ref);\n      // @ts-expect-error\n      first.remove();\n    }\n    this.optimize();\n  }\n\n  enable(enabled = true) {\n    this.domNode.setAttribute('contenteditable', enabled ? 'true' : 'false');\n  }\n\n  formatAt(index: number, length: number, format: string, value: unknown) {\n    super.formatAt(index, length, format, value);\n    this.optimize();\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (index >= this.length()) {\n      if (def == null || this.scroll.query(value, Scope.BLOCK) == null) {\n        const blot = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(blot);\n        if (def == null && value.endsWith('\\n')) {\n          blot.insertAt(0, value.slice(0, -1), def);\n        } else {\n          blot.insertAt(0, value, def);\n        }\n      } else {\n        const embed = this.scroll.create(value, def);\n        this.appendChild(embed);\n      }\n    } else {\n      super.insertAt(index, value, def);\n    }\n    this.optimize();\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    if (blot.statics.scope === Scope.INLINE_BLOT) {\n      const wrapper = this.scroll.create(\n        this.statics.defaultChild.blotName,\n      ) as Parent;\n      wrapper.appendChild(blot);\n      super.insertBefore(wrapper, ref);\n    } else {\n      super.insertBefore(blot, ref);\n    }\n  }\n\n  insertContents(index: number, delta: Delta) {\n    const renderBlocks = this.deltaToRenderBlocks(\n      delta.concat(new Delta().insert('\\n')),\n    );\n    const last = renderBlocks.pop();\n    if (last == null) return;\n\n    this.batchStart();\n\n    const first = renderBlocks.shift();\n    if (first) {\n      const shouldInsertNewlineChar =\n        first.type === 'block' &&\n        (first.delta.length() === 0 ||\n          (!this.descendant(BlockEmbed, index)[0] && index < this.length()));\n      const delta =\n        first.type === 'block'\n          ? first.delta\n          : new Delta().insert({ [first.key]: first.value });\n      insertInlineContents(this, index, delta);\n      const newlineCharLength = first.type === 'block' ? 1 : 0;\n      const lineEndIndex = index + delta.length() + newlineCharLength;\n      if (shouldInsertNewlineChar) {\n        this.insertAt(lineEndIndex - 1, '\\n');\n      }\n\n      const formats = bubbleFormats(this.line(index)[0]);\n      const attributes = AttributeMap.diff(formats, first.attributes) || {};\n      Object.keys(attributes).forEach((name) => {\n        this.formatAt(lineEndIndex - 1, 1, name, attributes[name]);\n      });\n\n      index = lineEndIndex;\n    }\n\n    let [refBlot, refBlotOffset] = this.children.find(index);\n    if (renderBlocks.length) {\n      if (refBlot) {\n        refBlot = refBlot.split(refBlotOffset);\n        refBlotOffset = 0;\n      }\n\n      renderBlocks.forEach((renderBlock) => {\n        if (renderBlock.type === 'block') {\n          const block = this.createBlock(\n            renderBlock.attributes,\n            refBlot || undefined,\n          );\n          insertInlineContents(block, 0, renderBlock.delta);\n        } else {\n          const blockEmbed = this.create(\n            renderBlock.key,\n            renderBlock.value,\n          ) as EmbedBlot;\n          this.insertBefore(blockEmbed, refBlot || undefined);\n          Object.keys(renderBlock.attributes).forEach((name) => {\n            blockEmbed.format(name, renderBlock.attributes[name]);\n          });\n        }\n      });\n    }\n\n    if (last.type === 'block' && last.delta.length()) {\n      const offset = refBlot\n        ? refBlot.offset(refBlot.scroll) + refBlotOffset\n        : this.length();\n      insertInlineContents(this, offset, last.delta);\n    }\n\n    this.batchEnd();\n    this.optimize();\n  }\n\n  isEnabled() {\n    return this.domNode.getAttribute('contenteditable') === 'true';\n  }\n\n  leaf(index: number): [LeafBlot | null, number] {\n    const last = this.path(index).pop();\n    if (!last) {\n      return [null, -1];\n    }\n\n    const [blot, offset] = last;\n    return blot instanceof LeafBlot ? [blot, offset] : [null, -1];\n  }\n\n  line(index: number): [Block | BlockEmbed | null, number] {\n    if (index === this.length()) {\n      return this.line(index - 1);\n    }\n    // @ts-expect-error TODO: make descendant() generic\n    return this.descendant(isLine, index);\n  }\n\n  lines(index = 0, length = Number.MAX_VALUE): (Block | BlockEmbed)[] {\n    const getLines = (\n      blot: ParentBlot,\n      blotIndex: number,\n      blotLength: number,\n    ) => {\n      let lines: (Block | BlockEmbed)[] = [];\n      let lengthLeft = blotLength;\n      blot.children.forEachAt(\n        blotIndex,\n        blotLength,\n        (child, childIndex, childLength) => {\n          if (isLine(child)) {\n            lines.push(child);\n          } else if (child instanceof ContainerBlot) {\n            lines = lines.concat(getLines(child, childIndex, lengthLeft));\n          }\n          lengthLeft -= childLength;\n        },\n      );\n      return lines;\n    };\n    return getLines(this, index, length);\n  }\n\n  optimize(context?: { [key: string]: any }): void;\n  optimize(\n    mutations?: MutationRecord[],\n    context?: { [key: string]: any },\n  ): void;\n  optimize(mutations = [], context = {}) {\n    if (this.batch) return;\n    super.optimize(mutations, context);\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_OPTIMIZE, mutations, context);\n    }\n  }\n\n  path(index: number) {\n    return super.path(index).slice(1); // Exclude self\n  }\n\n  remove() {\n    // Never remove self\n  }\n\n  update(source?: EmitterSource): void;\n  update(mutations?: MutationRecord[]): void;\n  update(mutations?: MutationRecord[] | EmitterSource): void {\n    if (this.batch) {\n      if (Array.isArray(mutations)) {\n        this.batch = this.batch.concat(mutations);\n      }\n      return;\n    }\n    let source: EmitterSource = Emitter.sources.USER;\n    if (typeof mutations === 'string') {\n      source = mutations;\n    }\n    if (!Array.isArray(mutations)) {\n      mutations = this.observer.takeRecords();\n    }\n    mutations = mutations.filter(({ target }) => {\n      const blot = this.find(target, true);\n      return blot && !isUpdatable(blot);\n    });\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_BEFORE_UPDATE, source, mutations);\n    }\n    super.update(mutations.concat([])); // pass copy\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_UPDATE, source, mutations);\n    }\n  }\n\n  updateEmbedAt(index: number, key: string, change: unknown) {\n    // Currently it only supports top-level embeds (BlockEmbed).\n    // We can update `ParentBlot` in parchment to support inline embeds.\n    const [blot] = this.descendant((b: Blot) => b instanceof BlockEmbed, index);\n    if (blot && blot.statics.blotName === key && isUpdatable(blot)) {\n      blot.updateContent(change);\n    }\n  }\n\n  protected handleDragStart(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  private deltaToRenderBlocks(delta: Delta) {\n    const renderBlocks: RenderBlock[] = [];\n\n    let currentBlockDelta = new Delta();\n    delta.forEach((op) => {\n      const insert = op?.insert;\n      if (!insert) return;\n      if (typeof insert === 'string') {\n        const splitted = insert.split('\\n');\n        splitted.slice(0, -1).forEach((text) => {\n          currentBlockDelta.insert(text, op.attributes);\n          renderBlocks.push({\n            type: 'block',\n            delta: currentBlockDelta,\n            attributes: op.attributes ?? {},\n          });\n          currentBlockDelta = new Delta();\n        });\n        const last = splitted[splitted.length - 1];\n        if (last) {\n          currentBlockDelta.insert(last, op.attributes);\n        }\n      } else {\n        const key = Object.keys(insert)[0];\n        if (!key) return;\n        if (this.query(key, Scope.INLINE)) {\n          currentBlockDelta.push(op);\n        } else {\n          if (currentBlockDelta.length()) {\n            renderBlocks.push({\n              type: 'block',\n              delta: currentBlockDelta,\n              attributes: {},\n            });\n          }\n          currentBlockDelta = new Delta();\n          renderBlocks.push({\n            type: 'blockEmbed',\n            key,\n            value: insert[key],\n            attributes: op.attributes ?? {},\n          });\n        }\n      }\n    });\n\n    if (currentBlockDelta.length()) {\n      renderBlocks.push({\n        type: 'block',\n        delta: currentBlockDelta,\n        attributes: {},\n      });\n    }\n\n    return renderBlocks;\n  }\n\n  private createBlock(attributes: AttributeMap, refBlot?: Blot) {\n    let blotName: string | undefined;\n    const formats: AttributeMap = {};\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      const isBlockBlot = this.query(key, Scope.BLOCK & Scope.BLOT) != null;\n      if (isBlockBlot) {\n        blotName = key;\n      } else {\n        formats[key] = value;\n      }\n    });\n\n    const block = this.create(\n      blotName || this.statics.defaultChild.blotName,\n      blotName ? attributes[blotName] : undefined,\n    ) as ParentBlot;\n\n    this.insertBefore(block, refBlot || undefined);\n\n    const length = block.length();\n    Object.entries(formats).forEach(([key, value]) => {\n      block.formatAt(0, length, key, value);\n    });\n\n    return block;\n  }\n}\n\nfunction insertInlineContents(\n  parent: ParentBlot,\n  index: number,\n  inlineContents: Delta,\n) {\n  inlineContents.reduce((index, op) => {\n    const length = Op.length(op);\n    let attributes = op.attributes || {};\n    if (op.insert != null) {\n      if (typeof op.insert === 'string') {\n        const text = op.insert;\n        parent.insertAt(index, text);\n        const [leaf] = parent.descendant(LeafBlot, index);\n        const formats = bubbleFormats(leaf);\n        attributes = AttributeMap.diff(formats, attributes) || {};\n      } else if (typeof op.insert === 'object') {\n        const key = Object.keys(op.insert)[0]; // There should only be one key\n        if (key == null) return index;\n        parent.insertAt(index, key, op.insert[key]);\n        const isInlineEmbed = parent.scroll.query(key, Scope.INLINE) != null;\n        if (isInlineEmbed) {\n          const [leaf] = parent.descendant(LeafBlot, index);\n          const formats = bubbleFormats(leaf);\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        }\n      }\n    }\n    Object.keys(attributes).forEach((key) => {\n      parent.formatAt(index, length, key, attributes[key]);\n    });\n    return index + length;\n  }, index);\n}\n\nexport default Scroll;\n", "import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['right', 'center', 'justify'],\n};\n\nconst AlignAttribute = new Attributor('align', 'align', config);\nconst AlignClass = new ClassAttributor('align', 'ql-align', config);\nconst AlignStyle = new StyleAttributor('align', 'text-align', config);\n\nexport { AlignAttribute, AlignClass, AlignStyle };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nclass ColorAttributor extends StyleAttributor {\n  value(domNode: HTMLElement) {\n    let value = super.value(domNode) as string;\n    if (!value.startsWith('rgb(')) return value;\n    value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n    const hex = value\n      .split(',')\n      .map((component) => `00${parseInt(component, 10).toString(16)}`.slice(-2))\n      .join('');\n    return `#${hex}`;\n  }\n}\n\nconst ColorClass = new ClassAttributor('color', 'ql-color', {\n  scope: Scope.INLINE,\n});\nconst ColorStyle = new ColorAttributor('color', 'color', {\n  scope: Scope.INLINE,\n});\n\nexport { ColorAttributor, ColorClass, ColorStyle };\n", "import { ClassAttributor, Scope } from 'parchment';\nimport { ColorAttributor } from './color.js';\n\nconst BackgroundClass = new ClassAttributor('background', 'ql-bg', {\n  scope: Scope.INLINE,\n});\nconst BackgroundStyle = new ColorAttributor('background', 'background-color', {\n  scope: Scope.INLINE,\n});\n\nexport { BackgroundClass, BackgroundStyle };\n", "import Block from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport Cursor from '../blots/cursor.js';\nimport Inline from '../blots/inline.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport Container from '../blots/container.js';\nimport Quill from '../core/quill.js';\n\nclass CodeBlockContainer extends Container {\n  static create(value: string) {\n    const domNode = super.create(value) as Element;\n    domNode.setAttribute('spellcheck', 'false');\n    return domNode;\n  }\n\n  code(index: number, length: number) {\n    return (\n      this.children\n        // @ts-expect-error\n        .map((child) => (child.length() <= 1 ? '' : child.domNode.innerText))\n        .join('\\n')\n        .slice(index, index + length)\n    );\n  }\n\n  html(index: number, length: number) {\n    // `\\n`s are needed in order to support empty lines at the beginning and the end.\n    // https://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\n    return `<pre>\\n${escapeText(this.code(index, length))}\\n</pre>`;\n  }\n}\n\nclass CodeBlock extends Block {\n  static TAB = '  ';\n\n  static register() {\n    Quill.register(CodeBlockContainer);\n  }\n}\n\nclass Code extends Inline {}\nCode.blotName = 'code';\nCode.tagName = 'CODE';\n\nCodeBlock.blotName = 'code-block';\nCodeBlock.className = 'ql-code-block';\nCodeBlock.tagName = 'DIV';\nCodeBlockContainer.blotName = 'code-block-container';\nCodeBlockContainer.className = 'ql-code-block-container';\nCodeBlockContainer.tagName = 'DIV';\n\nCodeBlockContainer.allowedChildren = [CodeBlock];\n\nCodeBlock.allowedChildren = [TextBlot, Break, Cursor];\nCodeBlock.requiredContainer = CodeBlockContainer;\n\nexport { Code, CodeBlockContainer, CodeBlock as default };\n", "import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['rtl'],\n};\n\nconst DirectionAttribute = new Attributor('direction', 'dir', config);\nconst DirectionClass = new ClassAttributor('direction', 'ql-direction', config);\nconst DirectionStyle = new StyleAttributor('direction', 'direction', config);\n\nexport { DirectionAttribute, DirectionClass, DirectionStyle };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.INLINE,\n  whitelist: ['serif', 'monospace'],\n};\n\nconst FontClass = new ClassAttributor('font', 'ql-font', config);\n\nclass FontStyleAttributor extends StyleAttributor {\n  value(node: HTMLElement) {\n    return super.value(node).replace(/[\"']/g, '');\n  }\n}\n\nconst FontStyle = new FontStyleAttributor('font', 'font-family', config);\n\nexport { FontStyle, FontClass };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst SizeClass = new ClassAttributor('size', 'ql-size', {\n  scope: Scope.INLINE,\n  whitelist: ['small', 'large', 'huge'],\n});\nconst SizeStyle = new StyleAttributor('size', 'font-size', {\n  scope: Scope.INLINE,\n  whitelist: ['10px', '18px', '32px'],\n});\n\nexport { SizeClass, SizeStyle };\n", "import { cloneDeep, isEqual } from 'lodash-es';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport type { Blot, BlockBlot } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:keyboard');\n\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nexport interface Context {\n  collapsed: boolean;\n  empty: boolean;\n  offset: number;\n  prefix: string;\n  suffix: string;\n  format: Record<string, unknown>;\n  event: KeyboardEvent;\n  line: BlockEmbed | BlockBlot;\n}\n\ninterface BindingObject\n  extends Partial<Omit<Context, 'prefix' | 'suffix' | 'format'>> {\n  key: number | string | string[];\n  shortKey?: boolean | null;\n  shiftKey?: boolean | null;\n  altKey?: boolean | null;\n  metaKey?: boolean | null;\n  ctrlKey?: boolean | null;\n  prefix?: RegExp;\n  suffix?: RegExp;\n  format?: Record<string, unknown> | string[];\n  handler?: (\n    this: { quill: Quill },\n    range: Range,\n    curContext: Context,\n    // eslint-disable-next-line no-use-before-define\n    binding: NormalizedBinding,\n  ) => boolean | void;\n}\n\ntype Binding = BindingObject | string | number;\n\ninterface NormalizedBinding extends Omit<BindingObject, 'key' | 'shortKey'> {\n  key: string | number;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\nclass Keyboard extends Module<KeyboardOptions> {\n  static DEFAULTS: KeyboardOptions;\n\n  static match(evt: KeyboardEvent, binding: BindingObject) {\n    if (\n      (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'] as const).some((key) => {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })\n    ) {\n      return false;\n    }\n    return binding.key === evt.key || binding.key === evt.which;\n  }\n\n  bindings: Record<string, NormalizedBinding[]>;\n\n  constructor(quill: Quill, options: Partial<KeyboardOptions>) {\n    super(quill, options);\n    this.bindings = {};\n    // @ts-expect-error Fix me later\n    Object.keys(this.options.bindings).forEach((name) => {\n      // @ts-expect-error Fix me later\n      if (this.options.bindings[name]) {\n        // @ts-expect-error Fix me later\n        this.addBinding(this.options.bindings[name]);\n      }\n    });\n    this.addBinding({ key: 'Enter', shiftKey: null }, this.handleEnter);\n    this.addBinding(\n      { key: 'Enter', metaKey: null, ctrlKey: null, altKey: null },\n      () => {},\n    );\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true },\n        this.handleDelete,\n      );\n    } else {\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true, prefix: /^.?$/ },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true, suffix: /^.?$/ },\n        this.handleDelete,\n      );\n    }\n    this.addBinding(\n      { key: 'Backspace' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      { key: 'Delete' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      {\n        key: 'Backspace',\n        altKey: null,\n        ctrlKey: null,\n        metaKey: null,\n        shiftKey: null,\n      },\n      { collapsed: true, offset: 0 },\n      this.handleBackspace,\n    );\n    this.listen();\n  }\n\n  addBinding(\n    keyBinding: Binding,\n    context:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n    handler:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n  ) {\n    const binding = normalize(keyBinding);\n    if (binding == null) {\n      debug.warn('Attempted to add invalid keyboard binding', binding);\n      return;\n    }\n    if (typeof context === 'function') {\n      context = { handler: context };\n    }\n    if (typeof handler === 'function') {\n      handler = { handler };\n    }\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n    keys.forEach((key) => {\n      const singleBinding = {\n        ...binding,\n        key,\n        ...context,\n        ...handler,\n      };\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\n      this.bindings[singleBinding.key].push(singleBinding);\n    });\n  }\n\n  listen() {\n    this.quill.root.addEventListener('keydown', (evt) => {\n      if (evt.defaultPrevented || evt.isComposing) return;\n\n      // evt.isComposing is false when pressing Enter/Backspace when composing in Safari\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      const isComposing =\n        evt.keyCode === 229 && (evt.key === 'Enter' || evt.key === 'Backspace');\n      if (isComposing) return;\n\n      const bindings = (this.bindings[evt.key] || []).concat(\n        this.bindings[evt.which] || [],\n      );\n      const matches = bindings.filter((binding) =>\n        Keyboard.match(evt, binding),\n      );\n      if (matches.length === 0) return;\n      // @ts-expect-error\n      const blot = Quill.find(evt.target, true);\n      if (blot && blot.scroll !== this.quill.scroll) return;\n      const range = this.quill.getSelection();\n      if (range == null || !this.quill.hasFocus()) return;\n      const [line, offset] = this.quill.getLine(range.index);\n      const [leafStart, offsetStart] = this.quill.getLeaf(range.index);\n      const [leafEnd, offsetEnd] =\n        range.length === 0\n          ? [leafStart, offsetStart]\n          : this.quill.getLeaf(range.index + range.length);\n      const prefixText =\n        leafStart instanceof TextBlot\n          ? leafStart.value().slice(0, offsetStart)\n          : '';\n      const suffixText =\n        leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n      const curContext = {\n        collapsed: range.length === 0,\n        // @ts-expect-error Fix me later\n        empty: range.length === 0 && line.length() <= 1,\n        format: this.quill.getFormat(range),\n        line,\n        offset,\n        prefix: prefixText,\n        suffix: suffixText,\n        event: evt,\n      };\n      const prevented = matches.some((binding) => {\n        if (\n          binding.collapsed != null &&\n          binding.collapsed !== curContext.collapsed\n        ) {\n          return false;\n        }\n        if (binding.empty != null && binding.empty !== curContext.empty) {\n          return false;\n        }\n        if (binding.offset != null && binding.offset !== curContext.offset) {\n          return false;\n        }\n        if (Array.isArray(binding.format)) {\n          // any format is present\n          if (binding.format.every((name) => curContext.format[name] == null)) {\n            return false;\n          }\n        } else if (typeof binding.format === 'object') {\n          // all formats must match\n          if (\n            !Object.keys(binding.format).every((name) => {\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === true)\n                return curContext.format[name] != null;\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === false)\n                return curContext.format[name] == null;\n              // @ts-expect-error Fix me later\n              return isEqual(binding.format[name], curContext.format[name]);\n            })\n          ) {\n            return false;\n          }\n        }\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n          return false;\n        }\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n          return false;\n        }\n        // @ts-expect-error Fix me later\n        return binding.handler.call(this, range, curContext, binding) !== true;\n      });\n      if (prevented) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  handleBackspace(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)\n      ? 2\n      : 1;\n    if (range.index === 0 || this.quill.getLength() <= 1) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 0) {\n      // Always deleting newline here, length always 1\n      const [prev] = this.quill.getLine(range.index - 1);\n      if (prev) {\n        const isPrevLineEmpty =\n          prev.statics.blotName === 'block' && prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          // @ts-expect-error Fix me later\n          const curFormats = line.formats();\n          const prevFormats = this.quill.getFormat(range.index - 1, 1);\n          formats = AttributeMap.diff(curFormats, prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            const formatDelta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - 2)\n              .retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDelete(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix)\n      ? 2\n      : 1;\n    if (range.index >= this.quill.getLength() - length) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index).delete(length);\n    // @ts-expect-error Fix me later\n    if (context.offset >= line.length() - 1) {\n      const [next] = this.quill.getLine(range.index + 1);\n      if (next) {\n        // @ts-expect-error Fix me later\n        const curFormats = line.formats();\n        const nextFormats = this.quill.getFormat(range.index, 1);\n        formats = AttributeMap.diff(curFormats, nextFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          delta = delta.retain(next.length() - 1).retain(1, formats);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDeleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n    this.quill.focus();\n  }\n\n  handleEnter(range: Range, context: Context) {\n    const lineFormats = Object.keys(context.format).reduce(\n      (formats: Record<string, unknown>, format) => {\n        if (\n          this.quill.scroll.query(format, Scope.BLOCK) &&\n          !Array.isArray(context.format[format])\n        ) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      },\n      {},\n    );\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .insert('\\n', lineFormats);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n    this.quill.focus();\n  }\n}\n\nconst defaultOptions: KeyboardOptions = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      },\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      },\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      },\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      },\n    },\n    tab: {\n      key: 'Tab',\n      handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      },\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler(range, context) {\n        const formats: Record<string, unknown> = { list: false };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(\n          range.index,\n          range.length,\n          formats,\n          Quill.sources.USER,\n        );\n      },\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: { list: 'checked' },\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const formats = {\n          // @ts-expect-error Fix me later\n          ...line.formats(),\n          list: 'checked',\n        };\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', formats)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { list: 'unchecked' });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler(range, context) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', context.format)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { header: null });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler() {},\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler() {},\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler(range) {\n        const module = this.quill.getModule('table');\n        if (module) {\n          // @ts-expect-error\n          const [table, row, cell, offset] = module.getTable(range);\n          const shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          let index = table.offset();\n          if (shift < 0) {\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(\n              range.index + 1,\n              range.length,\n              Quill.sources.SILENT,\n            );\n          } else if (shift > 0) {\n            index += table.length();\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      },\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler(range, context) {\n        const { event, line: cell } = context;\n        const offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      },\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        'code-block': false,\n        blockquote: false,\n        table: false,\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        const { length } = context.prefix;\n        const [line, offset] = this.quill.getLine(range.index);\n        if (offset > length) return true;\n        let value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index - offset)\n          .delete(length + 1)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - 2 - offset)\n          .retain(1, { list: value });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        let numLines = 2;\n        let cur = line;\n        while (\n          cur != null &&\n          cur.length() <= 1 &&\n          cur.formats()['code-block']\n        ) {\n          // @ts-expect-error\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            const delta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - offset - 2)\n              .retain(1, { 'code-block': null })\n              .delete(1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true),\n  },\n};\n\nKeyboard.DEFAULTS = defaultOptions;\n\nfunction makeCodeBlockHandler(indent: boolean): BindingObject {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler(range, { event }) {\n      const CodeBlock = this.quill.scroll.query('code-block');\n      // @ts-expect-error\n      const { TAB } = CodeBlock;\n      if (range.length === 0 && !event.shiftKey) {\n        this.quill.insertText(range.index, TAB, Quill.sources.USER);\n        this.quill.setSelection(range.index + TAB.length, Quill.sources.SILENT);\n        return;\n      }\n\n      const lines =\n        range.length === 0\n          ? this.quill.getLines(range.index, 1)\n          : this.quill.getLines(range);\n      let { index, length } = range;\n      lines.forEach((line, i) => {\n        if (indent) {\n          line.insertAt(0, TAB);\n          if (i === 0) {\n            index += TAB.length;\n          } else {\n            length += TAB.length;\n          }\n          // @ts-expect-error Fix me later\n        } else if (line.domNode.textContent.startsWith(TAB)) {\n          line.deleteAt(0, TAB.length);\n          if (i === 0) {\n            index -= TAB.length;\n          } else {\n            length -= TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    },\n  };\n}\n\nfunction makeEmbedArrowHandler(\n  key: string,\n  shiftKey: boolean | null,\n): BindingObject {\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return {\n    key,\n    shiftKey,\n    altKey: null,\n    [where]: /^$/,\n    handler(range) {\n      let { index } = range;\n      if (key === 'ArrowRight') {\n        index += range.length + 1;\n      }\n      const [leaf] = this.quill.getLeaf(index);\n      if (!(leaf instanceof EmbedBlot)) return true;\n      if (key === 'ArrowLeft') {\n        if (shiftKey) {\n          this.quill.setSelection(\n            range.index - 1,\n            range.length + 1,\n            Quill.sources.USER,\n          );\n        } else {\n          this.quill.setSelection(range.index - 1, Quill.sources.USER);\n        }\n      } else if (shiftKey) {\n        this.quill.setSelection(\n          range.index,\n          range.length + 1,\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.setSelection(\n          range.index + range.length + 1,\n          Quill.sources.USER,\n        );\n      }\n      return false;\n    },\n  };\n}\n\nfunction makeFormatHandler(format: string): BindingObject {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    },\n  };\n}\n\nfunction makeTableArrowHandler(up: boolean): BindingObject {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler(range, context) {\n      // TODO move to table module\n      const key = up ? 'prev' : 'next';\n      const cell = context.line;\n      const targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          // @ts-expect-error\n          let targetCell = targetRow.children.head;\n          let cur = cell;\n          while (cur.prev != null) {\n            // @ts-expect-error\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          const index =\n            targetCell.offset(this.quill.scroll) +\n            Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        // @ts-expect-error\n        const targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll) + targetLine.length() - 1,\n              0,\n              Quill.sources.USER,\n            );\n          } else {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll),\n              0,\n              Quill.sources.USER,\n            );\n          }\n        }\n      }\n      return false;\n    },\n  };\n}\n\nfunction normalize(binding: Binding): BindingObject | null {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = { key: binding };\n  } else if (typeof binding === 'object') {\n    binding = cloneDeep(binding);\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\n// TODO: Move into quill.ts or editor.ts\nfunction deleteRange({ quill, range }: { quill: Quill; range: Range }) {\n  const lines = quill.getLines(range);\n  let formats = {};\n  if (lines.length > 1) {\n    const firstFormats = lines[0].formats();\n    const lastFormats = lines[lines.length - 1].formats();\n    formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n  }\n  quill.deleteText(range, Quill.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n  }\n  quill.setSelection(range.index, Quill.sources.SILENT);\n}\n\nfunction tableSide(_table: unknown, row: Blot, cell: Blot, offset: number) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\n\nexport { Keyboard as default, SHORTKEY, normalize, deleteRange };\n", "const normalWeightRegexp = /font-weight:\\s*normal/;\nconst blockTagNames = ['P', 'OL', 'UL'];\n\nconst isBlockElement = (element: Element | null) => {\n  return element && blockTagNames.includes(element.tagName);\n};\n\nconst normalizeEmptyLines = (doc: Document) => {\n  Array.from(doc.querySelectorAll('br'))\n    .filter(\n      (br) =>\n        isBlockElement(br.previousElementSibling) &&\n        isBlockElement(br.nextElementSibling),\n    )\n    .forEach((br) => {\n      br.parentNode?.removeChild(br);\n    });\n};\n\nconst normalizeFontWeight = (doc: Document) => {\n  Array.from(doc.querySelectorAll('b[style*=\"font-weight\"]'))\n    .filter((node) => node.getAttribute('style')?.match(normalWeightRegexp))\n    .forEach((node) => {\n      const fragment = doc.createDocumentFragment();\n      fragment.append(...node.childNodes);\n      node.parentNode?.replaceChild(fragment, node);\n    });\n};\n\nexport default function normalize(doc: Document) {\n  if (doc.querySelector('[id^=\"docs-internal-guid-\"]')) {\n    normalizeFontWeight(doc);\n    normalizeEmptyLines(doc);\n  }\n}\n", "const ignoreRegexp = /\\bmso-list:[^;]*ignore/i;\nconst idRegexp = /\\bmso-list:[^;]*\\bl(\\d+)/i;\nconst indentRegexp = /\\bmso-list:[^;]*\\blevel(\\d+)/i;\n\nconst parseListItem = (element: Element, html: string) => {\n  const style = element.getAttribute('style');\n  const idMatch = style?.match(idRegexp);\n  if (!idMatch) {\n    return null;\n  }\n  const id = Number(idMatch[1]);\n\n  const indentMatch = style?.match(indentRegexp);\n  const indent = indentMatch ? Number(indentMatch[1]) : 1;\n\n  const typeRegexp = new RegExp(\n    `@list l${id}:level${indent}\\\\s*\\\\{[^\\\\}]*mso-level-number-format:\\\\s*([\\\\w-]+)`,\n    'i',\n  );\n  const typeMatch = html.match(typeRegexp);\n  const type = typeMatch && typeMatch[1] === 'bullet' ? 'bullet' : 'ordered';\n\n  return { id, indent, type, element };\n};\n\n// list items are represented as `p` tags with styles like `mso-list: l0 level1` where:\n// 1. \"0\" in \"l0\" means the list item id;\n// 2. \"1\" in \"level1\" means the indent level, starting from 1.\nconst normalizeListItem = (doc: Document) => {\n  const msoList = Array.from(doc.querySelectorAll('[style*=mso-list]'));\n  const ignored: Element[] = [];\n  const others: Element[] = [];\n  msoList.forEach((node) => {\n    const shouldIgnore = (node.getAttribute('style') || '').match(ignoreRegexp);\n    if (shouldIgnore) {\n      ignored.push(node);\n    } else {\n      others.push(node);\n    }\n  });\n\n  // Each list item contains a marker wrapped with \"mso-list: Ignore\".\n  ignored.forEach((node) => node.parentNode?.removeChild(node));\n\n  // The list stype is not defined inline with the tag, instead, it's in the\n  // style tag so we need to pass the html as a string.\n  const html = doc.documentElement.innerHTML;\n  const listItems = others\n    .map((element) => parseListItem(element, html))\n    .filter((parsed) => parsed);\n\n  while (listItems.length) {\n    const childListItems = [];\n\n    let current = listItems.shift();\n    // Group continuous items into the same group (aka \"ul\")\n    while (current) {\n      childListItems.push(current);\n      current =\n        listItems.length &&\n        listItems[0]?.element === current.element.nextElementSibling &&\n        // Different id means the next item doesn't belong to this group.\n        listItems[0].id === current.id\n          ? listItems.shift()\n          : null;\n    }\n\n    const ul = document.createElement('ul');\n    childListItems.forEach((listItem) => {\n      const li = document.createElement('li');\n      li.setAttribute('data-list', listItem.type);\n      if (listItem.indent > 1) {\n        li.setAttribute('class', `ql-indent-${listItem.indent - 1}`);\n      }\n      li.innerHTML = listItem.element.innerHTML;\n      ul.appendChild(li);\n    });\n\n    const element = childListItems[0]?.element;\n    const { parentNode } = element ?? {};\n    if (element) {\n      parentNode?.replaceChild(ul, element);\n    }\n    childListItems.slice(1).forEach(({ element: e }) => {\n      parentNode?.removeChild(e);\n    });\n  }\n};\n\nexport default function normalize(doc: Document) {\n  if (\n    doc.documentElement.getAttribute('xmlns:w') ===\n    'urn:schemas-microsoft-com:office:word'\n  ) {\n    normalizeListItem(doc);\n  }\n}\n", "import googleDocs from './normalizers/googleDocs.js';\nimport msWord from './normalizers/msWord.js';\n\nconst NORMALIZERS = [msWord, googleDocs];\n\nconst normalizeExternalHTML = (doc: Document) => {\n  if (doc.documentElement) {\n    NORMALIZERS.forEach((normalize) => {\n      normalize(doc);\n    });\n  }\n};\n\nexport default normalizeExternalHTML;\n", "import type { ScrollBlot } from 'parchment';\nimport {\n  Attributor,\n  BlockBlot,\n  ClassAttributor,\n  EmbedBlot,\n  Scope,\n  StyleAttributor,\n} from 'parchment';\nimport Delta from 'quill-delta';\nimport { BlockEmbed } from '../blots/block.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { AlignAttribute, AlignStyle } from '../formats/align.js';\nimport { BackgroundStyle } from '../formats/background.js';\nimport CodeBlock from '../formats/code.js';\nimport { ColorStyle } from '../formats/color.js';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction.js';\nimport { FontStyle } from '../formats/font.js';\nimport { SizeStyle } from '../formats/size.js';\nimport { deleteRange } from './keyboard.js';\nimport normalizeExternalHTML from './normalizeExternalHTML/index.js';\n\nconst debug = logger('quill:clipboard');\n\ntype Selector = string | Node['TEXT_NODE'] | Node['ELEMENT_NODE'];\ntype Matcher = (node: Node, delta: Delta, scroll: ScrollBlot) => Delta;\n\nconst CLIPBOARD_CONFIG: [Selector, Matcher][] = [\n  [Node.TEXT_NODE, matchText],\n  [Node.TEXT_NODE, matchNewline],\n  ['br', matchBreak],\n  [Node.ELEMENT_NODE, matchNewline],\n  [Node.ELEMENT_NODE, matchBlot],\n  [Node.ELEMENT_NODE, matchAttributor],\n  [Node.ELEMENT_NODE, matchStyles],\n  ['li', matchIndent],\n  ['ol, ul', matchList],\n  ['pre', matchCodeBlock],\n  ['tr', matchTable],\n  ['b', createMatchAlias('bold')],\n  ['i', createMatchAlias('italic')],\n  ['strike', createMatchAlias('strike')],\n  ['style', matchIgnore],\n];\n\nconst ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(\n  (memo: Record<string, Attributor>, attr) => {\n    memo[attr.keyName] = attr;\n    return memo;\n  },\n  {},\n);\n\nconst STYLE_ATTRIBUTORS = [\n  AlignStyle,\n  BackgroundStyle,\n  ColorStyle,\n  DirectionStyle,\n  FontStyle,\n  SizeStyle,\n].reduce((memo: Record<string, Attributor>, attr) => {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\ninterface ClipboardOptions {\n  matchers: [Selector, Matcher][];\n}\n\nclass Clipboard extends Module<ClipboardOptions> {\n  static DEFAULTS: ClipboardOptions = {\n    matchers: [],\n  };\n\n  matchers: [Selector, Matcher][];\n\n  constructor(quill: Quill, options: Partial<ClipboardOptions>) {\n    super(quill, options);\n    this.quill.root.addEventListener('copy', (e) =>\n      this.onCaptureCopy(e, false),\n    );\n    this.quill.root.addEventListener('cut', (e) => this.onCaptureCopy(e, true));\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\n    this.matchers = [];\n    CLIPBOARD_CONFIG.concat(this.options.matchers ?? []).forEach(\n      ([selector, matcher]) => {\n        this.addMatcher(selector, matcher);\n      },\n    );\n  }\n\n  addMatcher(selector: Selector, matcher: Matcher) {\n    this.matchers.push([selector, matcher]);\n  }\n\n  convert(\n    { html, text }: { html?: string; text?: string },\n    formats: Record<string, unknown> = {},\n  ) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text || '', {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName],\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || '', formats);\n    }\n    const delta = this.convertHTML(html);\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, '\\n') &&\n      (delta.ops[delta.ops.length - 1].attributes == null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  protected normalizeHTML(doc: Document) {\n    normalizeExternalHTML(doc);\n  }\n\n  protected convertHTML(html: string) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    this.normalizeHTML(doc);\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches,\n    );\n    return traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches,\n    );\n  }\n\n  dangerouslyPasteHTML(html: string, source?: EmitterSource): void;\n  dangerouslyPasteHTML(\n    index: number,\n    html: string,\n    source?: EmitterSource,\n  ): void;\n  dangerouslyPasteHTML(\n    index: number | string,\n    html?: string,\n    source: EmitterSource = Quill.sources.API,\n  ) {\n    if (typeof index === 'string') {\n      const delta = this.convert({ html: index, text: '' });\n      // @ts-expect-error\n      this.quill.setContents(delta, html);\n      this.quill.setSelection(0, Quill.sources.SILENT);\n    } else {\n      const paste = this.convert({ html, text: '' });\n      this.quill.updateContents(\n        new Delta().retain(index).concat(paste),\n        source,\n      );\n      this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n    }\n  }\n\n  onCaptureCopy(e: ClipboardEvent, isCut = false) {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n    const [range] = this.quill.selection.getRange();\n    if (range == null) return;\n    const { html, text } = this.onCopy(range, isCut);\n    e.clipboardData?.setData('text/plain', text);\n    e.clipboardData?.setData('text/html', html);\n    if (isCut) {\n      deleteRange({ range, quill: this.quill });\n    }\n  }\n\n  /*\n   * https://www.iana.org/assignments/media-types/text/uri-list\n   */\n  private normalizeURIList(urlList: string) {\n    return (\n      urlList\n        .split(/\\r?\\n/)\n        // Ignore all comments\n        .filter((url) => url[0] !== '#')\n        .join('\\n')\n    );\n  }\n\n  onCapturePaste(e: ClipboardEvent) {\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    e.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range == null) return;\n    const html = e.clipboardData?.getData('text/html');\n    let text = e.clipboardData?.getData('text/plain');\n    if (!html && !text) {\n      const urlList = e.clipboardData?.getData('text/uri-list');\n      if (urlList) {\n        text = this.normalizeURIList(urlList);\n      }\n    }\n    const files = Array.from(e.clipboardData?.files || []);\n    if (!html && files.length > 0) {\n      this.quill.uploader.upload(range, files);\n      return;\n    }\n    if (html && files.length > 0) {\n      const doc = new DOMParser().parseFromString(html, 'text/html');\n      if (\n        doc.body.childElementCount === 1 &&\n        doc.body.firstElementChild?.tagName === 'IMG'\n      ) {\n        this.quill.uploader.upload(range, files);\n        return;\n      }\n    }\n    this.onPaste(range, { html, text });\n  }\n\n  onCopy(range: Range, isCut: boolean): { html: string; text: string };\n  onCopy(range: Range) {\n    const text = this.quill.getText(range);\n    const html = this.quill.getSemanticHTML(range);\n    return { html, text };\n  }\n\n  onPaste(range: Range, { text, html }: { text?: string; html?: string }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convert({ text, html }, formats);\n    debug.log('onPaste', pastedDelta, { text, html });\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollSelectionIntoView();\n  }\n\n  prepareMatching(container: Element, nodeMatches: WeakMap<Node, Matcher[]>) {\n    const elementMatchers: Matcher[] = [];\n    const textMatchers: Matcher[] = [];\n    this.matchers.forEach((pair) => {\n      const [selector, matcher] = pair;\n      switch (selector) {\n        case Node.TEXT_NODE:\n          textMatchers.push(matcher);\n          break;\n        case Node.ELEMENT_NODE:\n          elementMatchers.push(matcher);\n          break;\n        default:\n          Array.from(container.querySelectorAll(selector)).forEach((node) => {\n            if (nodeMatches.has(node)) {\n              const matches = nodeMatches.get(node);\n              matches?.push(matcher);\n            } else {\n              nodeMatches.set(node, [matcher]);\n            }\n          });\n          break;\n      }\n    });\n    return [elementMatchers, textMatchers];\n  }\n}\n\nfunction applyFormat(\n  delta: Delta,\n  format: string,\n  value: unknown,\n  scroll: ScrollBlot,\n): Delta {\n  if (!scroll.query(format)) {\n    return delta;\n  }\n\n  return delta.reduce((newDelta, op) => {\n    if (!op.insert) return newDelta;\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    const formats = value ? { [format]: value } : {};\n    return newDelta.insert(op.insert, { ...formats, ...op.attributes });\n  }, new Delta());\n}\n\nfunction deltaEndsWith(delta: Delta, text: string) {\n  let endText = '';\n  for (\n    let i = delta.ops.length - 1;\n    i >= 0 && endText.length < text.length;\n    --i // eslint-disable-line no-plusplus\n  ) {\n    const op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node: Node, scroll: ScrollBlot) {\n  if (!(node instanceof Element)) return false;\n  const match = scroll.query(node);\n  // @ts-expect-error\n  if (match && match.prototype instanceof EmbedBlot) return false;\n\n  return [\n    'address',\n    'article',\n    'blockquote',\n    'canvas',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'iframe',\n    'li',\n    'main',\n    'nav',\n    'ol',\n    'output',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'td',\n    'tr',\n    'ul',\n    'video',\n  ].includes(node.tagName.toLowerCase());\n}\n\nfunction isBetweenInlineElements(node: HTMLElement, scroll: ScrollBlot) {\n  return (\n    node.previousElementSibling &&\n    node.nextElementSibling &&\n    !isLine(node.previousElementSibling, scroll) &&\n    !isLine(node.nextElementSibling, scroll)\n  );\n}\n\nconst preNodes = new WeakMap();\nfunction isPre(node: Node | null) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    // @ts-expect-error\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\n\nfunction traverse(\n  scroll: ScrollBlot,\n  node: ChildNode,\n  elementMatchers: Matcher[],\n  textMatchers: Matcher[],\n  nodeMatches: WeakMap<Node, Matcher[]>,\n): Delta {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce((delta: Delta, matcher) => {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\n      let childrenDelta = traverse(\n        scroll,\n        childNode,\n        elementMatchers,\n        textMatchers,\n        nodeMatches,\n      );\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\n          return matcher(childNode as HTMLElement, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(\n          (reducedDelta, matcher) => {\n            return matcher(childNode, reducedDelta, scroll);\n          },\n          childrenDelta,\n        );\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\n\nfunction createMatchAlias(format: string) {\n  return (_node: Element, delta: Delta, scroll: ScrollBlot) => {\n    return applyFormat(delta, format, true, scroll);\n  };\n}\n\nfunction matchAttributor(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const attributes = Attributor.keys(node);\n  const classes = ClassAttributor.keys(node);\n  const styles = StyleAttributor.keys(node);\n  const formats: Record<string, string | undefined> = {};\n  attributes\n    .concat(classes)\n    .concat(styles)\n    .forEach((name) => {\n      let attr = scroll.query(name, Scope.ATTRIBUTE) as Attributor;\n      if (attr != null) {\n        formats[attr.attrName] = attr.value(node);\n        if (formats[attr.attrName]) return;\n      }\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n      attr = STYLE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        attr = STYLE_ATTRIBUTORS[name];\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n    });\n\n  return Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n}\n\nfunction matchBlot(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (match == null) return delta;\n  // @ts-expect-error\n  if (match.prototype instanceof EmbedBlot) {\n    const embed = {};\n    // @ts-expect-error\n    const value = match.value(node);\n    if (value != null) {\n      // @ts-expect-error\n      embed[match.blotName] = value;\n      // @ts-expect-error\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    // @ts-expect-error\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if (\n      'blotName' in match &&\n      'formats' in match &&\n      typeof match.formats === 'function'\n    ) {\n      return applyFormat(\n        delta,\n        match.blotName,\n        match.formats(node, scroll),\n        scroll,\n      );\n    }\n  }\n  return delta;\n}\n\nfunction matchBreak(node: Node, delta: Delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchCodeBlock(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query('code-block');\n  const language =\n    match && 'formats' in match && typeof match.formats === 'function'\n      ? match.formats(node, scroll)\n      : true;\n  return applyFormat(delta, 'code-block', language, scroll);\n}\n\nfunction matchIgnore() {\n  return new Delta();\n}\n\nfunction matchIndent(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (\n    match == null ||\n    // @ts-expect-error\n    match.blotName !== 'list' ||\n    !deltaEndsWith(delta, '\\n')\n  ) {\n    return delta;\n  }\n  let indent = -1;\n  let parent = node.parentNode;\n  while (parent != null) {\n    // @ts-expect-error\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce((composed, op) => {\n    if (!op.insert) return composed;\n    if (op.attributes && typeof op.attributes.indent === 'number') {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, { indent, ...(op.attributes || {}) });\n  }, new Delta());\n}\n\nfunction matchList(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const element = node as Element;\n  let list = element.tagName === 'OL' ? 'ordered' : 'bullet';\n\n  const checkedAttr = element.getAttribute('data-checked');\n  if (checkedAttr) {\n    list = checkedAttr === 'true' ? 'checked' : 'unchecked';\n  }\n\n  return applyFormat(delta, 'list', list, scroll);\n}\n\nfunction matchNewline(node: Node, delta: Delta, scroll: ScrollBlot) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (\n      isLine(node, scroll) &&\n      (node.childNodes.length > 0 || node instanceof HTMLParagraphElement)\n    ) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      let nextSibling: Node | null = node.nextSibling;\n      while (nextSibling != null) {\n        if (isLine(nextSibling, scroll)) {\n          return delta.insert('\\n');\n        }\n        const match = scroll.query(nextSibling);\n        // @ts-expect-error\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const formats: Record<string, unknown> = {};\n  const style: Partial<CSSStyleDeclaration> = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.textDecoration === 'underline') {\n    formats.underline = true;\n  }\n  if (style.textDecoration === 'line-through') {\n    formats.strike = true;\n  }\n  if (\n    style.fontWeight?.startsWith('bold') ||\n    // @ts-expect-error Fix me later\n    parseInt(style.fontWeight, 10) >= 700\n  ) {\n    formats.bold = true;\n  }\n  delta = Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n  // @ts-expect-error\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchTable(\n  node: HTMLTableRowElement,\n  delta: Delta,\n  scroll: ScrollBlot,\n) {\n  const table =\n    node.parentElement?.tagName === 'TABLE'\n      ? node.parentElement\n      : node.parentElement?.parentElement;\n  if (table != null) {\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const row = rows.indexOf(node) + 1;\n    return applyFormat(delta, 'table', row, scroll);\n  }\n  return delta;\n}\n\nfunction matchText(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  // @ts-expect-error\n  let text = node.data as string;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentElement?.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (!isPre(node)) {\n    if (\n      text.trim().length === 0 &&\n      text.includes('\\n') &&\n      !isBetweenInlineElements(node, scroll)\n    ) {\n      return delta;\n    }\n    // convert all non-nbsp whitespace into regular space\n    text = text.replace(/[^\\S\\u00a0]/g, ' ');\n    // collapse consecutive spaces into one\n    text = text.replace(/ {2,}/g, ' ');\n    if (\n      (node.previousSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.previousSibling instanceof Element &&\n        isLine(node.previousSibling, scroll))\n    ) {\n      // block structure means we don't need leading space\n      text = text.replace(/^ /, '');\n    }\n    if (\n      (node.nextSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.nextSibling instanceof Element && isLine(node.nextSibling, scroll))\n    ) {\n      // block structure means we don't need trailing space\n      text = text.replace(/ $/, '');\n    }\n    // done removing whitespace and can normalize all to regular space\n    text = text.replaceAll('\\u00a0', ' ');\n  }\n  return delta.insert(text);\n}\n\nexport {\n  Clipboard as default,\n  matchAttributor,\n  matchBlot,\n  matchNewline,\n  matchText,\n  traverse,\n};\n", "import { Scope } from 'parchment';\nimport type Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type Scroll from '../blots/scroll.js';\nimport type { Range } from '../core/selection.js';\n\nexport interface HistoryOptions {\n  userOnly: boolean;\n  delay: number;\n  maxStack: number;\n}\n\nexport interface StackItem {\n  delta: Delta;\n  range: Range | null;\n}\n\ninterface Stack {\n  undo: StackItem[];\n  redo: StackItem[];\n}\n\nclass History extends Module<HistoryOptions> {\n  static DEFAULTS: HistoryOptions = {\n    delay: 1000,\n    maxStack: 100,\n    userOnly: false,\n  };\n\n  lastRecorded = 0;\n  ignoreChange = false;\n  stack: Stack = { undo: [], redo: [] };\n  currentRange: Range | null = null;\n\n  constructor(quill: Quill, options: Partial<HistoryOptions>) {\n    super(quill, options);\n    this.quill.on(\n      Quill.events.EDITOR_CHANGE,\n      (eventName, value, oldValue, source) => {\n        if (eventName === Quill.events.SELECTION_CHANGE) {\n          if (value && source !== Quill.sources.SILENT) {\n            this.currentRange = value;\n          }\n        } else if (eventName === Quill.events.TEXT_CHANGE) {\n          if (!this.ignoreChange) {\n            if (!this.options.userOnly || source === Quill.sources.USER) {\n              this.record(value, oldValue);\n            } else {\n              this.transform(value);\n            }\n          }\n\n          this.currentRange = transformRange(this.currentRange, value);\n        }\n      },\n    );\n\n    this.quill.keyboard.addBinding(\n      { key: 'z', shortKey: true },\n      this.undo.bind(this),\n    );\n    this.quill.keyboard.addBinding(\n      { key: ['z', 'Z'], shortKey: true, shiftKey: true },\n      this.redo.bind(this),\n    );\n    if (/Win/i.test(navigator.platform)) {\n      this.quill.keyboard.addBinding(\n        { key: 'y', shortKey: true },\n        this.redo.bind(this),\n      );\n    }\n\n    this.quill.root.addEventListener('beforeinput', (event) => {\n      if (event.inputType === 'historyUndo') {\n        this.undo();\n        event.preventDefault();\n      } else if (event.inputType === 'historyRedo') {\n        this.redo();\n        event.preventDefault();\n      }\n    });\n  }\n\n  change(source: 'undo' | 'redo', dest: 'redo' | 'undo') {\n    if (this.stack[source].length === 0) return;\n    const item = this.stack[source].pop();\n    if (!item) return;\n    const base = this.quill.getContents();\n    const inverseDelta = item.delta.invert(base);\n    this.stack[dest].push({\n      delta: inverseDelta,\n      range: transformRange(item.range, inverseDelta),\n    });\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.updateContents(item.delta, Quill.sources.USER);\n    this.ignoreChange = false;\n\n    this.restoreSelection(item);\n  }\n\n  clear() {\n    this.stack = { undo: [], redo: [] };\n  }\n\n  cutoff() {\n    this.lastRecorded = 0;\n  }\n\n  record(changeDelta: Delta, oldDelta: Delta) {\n    if (changeDelta.ops.length === 0) return;\n    this.stack.redo = [];\n    let undoDelta = changeDelta.invert(oldDelta);\n    let undoRange = this.currentRange;\n    const timestamp = Date.now();\n    if (\n      // @ts-expect-error Fix me later\n      this.lastRecorded + this.options.delay > timestamp &&\n      this.stack.undo.length > 0\n    ) {\n      const item = this.stack.undo.pop();\n      if (item) {\n        undoDelta = undoDelta.compose(item.delta);\n        undoRange = item.range;\n      }\n    } else {\n      this.lastRecorded = timestamp;\n    }\n    if (undoDelta.length() === 0) return;\n    this.stack.undo.push({ delta: undoDelta, range: undoRange });\n    // @ts-expect-error Fix me later\n    if (this.stack.undo.length > this.options.maxStack) {\n      this.stack.undo.shift();\n    }\n  }\n\n  redo() {\n    this.change('redo', 'undo');\n  }\n\n  transform(delta: Delta) {\n    transformStack(this.stack.undo, delta);\n    transformStack(this.stack.redo, delta);\n  }\n\n  undo() {\n    this.change('undo', 'redo');\n  }\n\n  protected restoreSelection(stackItem: StackItem) {\n    if (stackItem.range) {\n      this.quill.setSelection(stackItem.range, Quill.sources.USER);\n    } else {\n      const index = getLastChangeIndex(this.quill.scroll, stackItem.delta);\n      this.quill.setSelection(index, Quill.sources.USER);\n    }\n  }\n}\n\nfunction transformStack(stack: StackItem[], delta: Delta) {\n  let remoteDelta = delta;\n  for (let i = stack.length - 1; i >= 0; i -= 1) {\n    const oldItem = stack[i];\n    stack[i] = {\n      delta: remoteDelta.transform(oldItem.delta, true),\n      range: oldItem.range && transformRange(oldItem.range, remoteDelta),\n    };\n    remoteDelta = oldItem.delta.transform(remoteDelta);\n    if (stack[i].delta.length() === 0) {\n      stack.splice(i, 1);\n    }\n  }\n}\n\nfunction endsWithNewlineChange(scroll: Scroll, delta: Delta) {\n  const lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some((attr) => {\n      return scroll.query(attr, Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nfunction getLastChangeIndex(scroll: Scroll, delta: Delta) {\n  const deleteLength = delta.reduce((length, op) => {\n    return length + (op.delete || 0);\n  }, 0);\n  let changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(scroll, delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\nfunction transformRange(range: Range | null, delta: Delta) {\n  if (!range) return range;\n  const start = delta.transformPosition(range.index);\n  const end = delta.transformPosition(range.index + range.length);\n  return { index: start, length: end - start };\n}\n\nexport { History as default, getLastChangeIndex };\n", "import Delta from 'quill-delta';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\ninterface UploaderOptions {\n  mimetypes: string[];\n  handler: (this: { quill: Quill }, range: Range, files: File[]) => void;\n}\n\nclass Uploader extends Module<UploaderOptions> {\n  static DEFAULTS: UploaderOptions;\n\n  constructor(quill: Quill, options: Partial<UploaderOptions>) {\n    super(quill, options);\n    quill.root.addEventListener('drop', (e) => {\n      e.preventDefault();\n      let native: ReturnType<typeof document.createRange> | null = null;\n      if (document.caretRangeFromPoint) {\n        native = document.caretRangeFromPoint(e.clientX, e.clientY);\n        // @ts-expect-error\n      } else if (document.caretPositionFromPoint) {\n        // @ts-expect-error\n        const position = document.caretPositionFromPoint(e.clientX, e.clientY);\n        native = document.createRange();\n        native.setStart(position.offsetNode, position.offset);\n        native.setEnd(position.offsetNode, position.offset);\n      }\n\n      const normalized = native && quill.selection.normalizeNative(native);\n      if (normalized) {\n        const range = quill.selection.normalizedToRange(normalized);\n        if (e.dataTransfer?.files) {\n          this.upload(range, e.dataTransfer.files);\n        }\n      }\n    });\n  }\n\n  upload(range: Range, files: FileList | File[]) {\n    const uploads: File[] = [];\n    Array.from(files).forEach((file) => {\n      if (file && this.options.mimetypes?.includes(file.type)) {\n        uploads.push(file);\n      }\n    });\n    if (uploads.length > 0) {\n      // @ts-expect-error Fix me later\n      this.options.handler.call(this, range, uploads);\n    }\n  }\n}\n\nUploader.DEFAULTS = {\n  mimetypes: ['image/png', 'image/jpeg'],\n  handler(range: Range, files: File[]) {\n    if (!this.quill.scroll.query('image')) {\n      return;\n    }\n    const promises = files.map<Promise<string>>((file) => {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result as string);\n        };\n        reader.readAsDataURL(file);\n      });\n    });\n    Promise.all(promises).then((images) => {\n      const update = images.reduce((delta: Delta, image) => {\n        return delta.insert({ image });\n      }, new Delta().retain(range.index).delete(range.length)) as Delta;\n      this.quill.updateContents(update, Emitter.sources.USER);\n      this.quill.setSelection(\n        range.index + images.length,\n        Emitter.sources.SILENT,\n      );\n    });\n  },\n};\n\nexport default Uploader;\n", "import Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { deleteRange } from './keyboard.js';\n\nconst INSERT_TYPES = ['insertText', 'insertReplacementText'];\n\nclass Input extends Module {\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    quill.root.addEventListener('beforeinput', (event) => {\n      this.handleBeforeInput(event);\n    });\n\n    // Gboard with English input on Android triggers `compositionstart` sometimes even\n    // users are not going to type anything.\n    if (!/Android/i.test(navigator.userAgent)) {\n      quill.on(Quill.events.COMPOSITION_BEFORE_START, () => {\n        this.handleCompositionStart();\n      });\n    }\n  }\n\n  private deleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n  }\n\n  private replaceText(range: Range, text = '') {\n    if (range.length === 0) return false;\n\n    if (text) {\n      // Follow the native behavior that inherits the formats of the first character\n      const formats = this.quill.getFormat(range.index, 1);\n      this.deleteRange(range);\n      this.quill.updateContents(\n        new Delta().retain(range.index).insert(text, formats),\n        Quill.sources.USER,\n      );\n    } else {\n      this.deleteRange(range);\n    }\n\n    this.quill.setSelection(range.index + text.length, 0, Quill.sources.SILENT);\n    return true;\n  }\n\n  private handleBeforeInput(event: InputEvent) {\n    if (\n      this.quill.composition.isComposing ||\n      event.defaultPrevented ||\n      !INSERT_TYPES.includes(event.inputType)\n    ) {\n      return;\n    }\n\n    const staticRange = event.getTargetRanges\n      ? event.getTargetRanges()[0]\n      : null;\n    if (!staticRange || staticRange.collapsed === true) {\n      return;\n    }\n\n    const text = getPlainTextFromInputEvent(event);\n    if (text == null) {\n      return;\n    }\n    const normalized = this.quill.selection.normalizeNative(staticRange);\n    const range = normalized\n      ? this.quill.selection.normalizedToRange(normalized)\n      : null;\n    if (range && this.replaceText(range, text)) {\n      event.preventDefault();\n    }\n  }\n\n  private handleCompositionStart() {\n    const range = this.quill.getSelection();\n    if (range) {\n      this.replaceText(range);\n    }\n  }\n}\n\nfunction getPlainTextFromInputEvent(event: InputEvent) {\n  // When `inputType` is \"insertText\":\n  // - `event.data` should be string (Safari uses `event.dataTransfer`).\n  // - `event.dataTransfer` should be null.\n  // When `inputType` is \"insertReplacementText\":\n  // - `event.data` should be null.\n  // - `event.dataTransfer` should contain \"text/plain\" data.\n\n  if (typeof event.data === 'string') {\n    return event.data;\n  }\n  if (event.dataTransfer?.types.includes('text/plain')) {\n    return event.dataTransfer.getData('text/plain');\n  }\n  return null;\n}\n\nexport default Input;\n", "import { ParentBlot } from 'parchment';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\n\nconst isMac = /Mac/i.test(navigator.platform);\n\n// Export for testing\nexport const TTL_FOR_VALID_SELECTION_CHANGE = 100;\n\n// A loose check to determine if the shortcut can move the caret before a UI node:\n// <ANY_PARENT>[CARET]<div class=\"ql-ui\"></div>[CONTENT]</ANY_PARENT>\nconst canMoveCaretBeforeUINode = (event: KeyboardEvent) => {\n  if (\n    event.key === 'ArrowLeft' ||\n    event.key === 'ArrowRight' || // RTL scripts or moving from the end of the previous line\n    event.key === 'ArrowUp' ||\n    event.key === 'ArrowDown' ||\n    event.key === 'Home'\n  ) {\n    return true;\n  }\n\n  if (isMac && event.key === 'a' && event.ctrlKey === true) {\n    return true;\n  }\n\n  return false;\n};\n\nclass UINode extends Module {\n  isListening = false;\n  selectionChangeDeadline = 0;\n\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    this.handleArrowKeys();\n    this.handleNavigationShortcuts();\n  }\n\n  private handleArrowKeys() {\n    this.quill.keyboard.addBinding({\n      key: ['ArrowLeft', 'ArrowRight'],\n      offset: 0,\n      shiftKey: null,\n      handler(range, { line, event }) {\n        if (!(line instanceof ParentBlot) || !line.uiNode) {\n          return true;\n        }\n\n        const isRTL = getComputedStyle(line.domNode)['direction'] === 'rtl';\n        if (\n          (isRTL && event.key !== 'ArrowRight') ||\n          (!isRTL && event.key !== 'ArrowLeft')\n        ) {\n          return true;\n        }\n\n        this.quill.setSelection(\n          range.index - 1,\n          range.length + (event.shiftKey ? 1 : 0),\n          Quill.sources.USER,\n        );\n        return false;\n      },\n    });\n  }\n\n  private handleNavigationShortcuts() {\n    this.quill.root.addEventListener('keydown', (event) => {\n      if (!event.defaultPrevented && canMoveCaretBeforeUINode(event)) {\n        this.ensureListeningToSelectionChange();\n      }\n    });\n  }\n\n  /**\n   * We only listen to the `selectionchange` event when\n   * there is an intention of moving the caret to the beginning using shortcuts.\n   * This is primarily implemented to prevent infinite loops, as we are changing\n   * the selection within the handler of a `selectionchange` event.\n   */\n  private ensureListeningToSelectionChange() {\n    this.selectionChangeDeadline = Date.now() + TTL_FOR_VALID_SELECTION_CHANGE;\n\n    if (this.isListening) return;\n    this.isListening = true;\n\n    const listener = () => {\n      this.isListening = false;\n\n      if (Date.now() <= this.selectionChangeDeadline) {\n        this.handleSelectionChange();\n      }\n    };\n\n    document.addEventListener('selectionchange', listener, {\n      once: true,\n    });\n  }\n\n  private handleSelectionChange() {\n    const selection = document.getSelection();\n    if (!selection) return;\n    const range = selection.getRangeAt(0);\n    if (range.collapsed !== true || range.startOffset !== 0) return;\n\n    const line = this.quill.scroll.find(range.startContainer);\n    if (!(line instanceof ParentBlot) || !line.uiNode) return;\n\n    const newRange = document.createRange();\n    newRange.setStartAfter(line.uiNode);\n    newRange.setEndAfter(line.uiNode);\n    selection.removeAllRanges();\n    selection.addRange(newRange);\n  }\n}\n\nexport default UINode;\n", "import Quill, { Parchment, Range } from './core/quill.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core/quill.js';\n\nimport Block, { BlockEmbed } from './blots/block.js';\nimport Break from './blots/break.js';\nimport Container from './blots/container.js';\nimport Cursor from './blots/cursor.js';\nimport Embed from './blots/embed.js';\nimport Inline from './blots/inline.js';\nimport Scroll from './blots/scroll.js';\nimport TextBlot from './blots/text.js';\n\nimport Clipboard from './modules/clipboard.js';\nimport History from './modules/history.js';\nimport Keyboard from './modules/keyboard.js';\nimport Uploader from './modules/uploader.js';\nimport Delta, { Op, OpIterator, AttributeMap } from 'quill-delta';\nimport Input from './modules/input.js';\nimport UINode from './modules/uiNode.js';\n\nexport { default as Module } from './core/module.js';\nexport { Delta, Op, OpIterator, AttributeMap, Parchment, Range };\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nQuill.register({\n  'blots/block': Block,\n  'blots/block/embed': BlockEmbed,\n  'blots/break': Break,\n  'blots/container': Container,\n  'blots/cursor': Cursor,\n  'blots/embed': Embed,\n  'blots/inline': Inline,\n  'blots/scroll': Scroll,\n  'blots/text': TextBlot,\n\n  'modules/clipboard': Clipboard,\n  'modules/history': History,\n  'modules/keyboard': Keyboard,\n  'modules/uploader': Uploader,\n  'modules/input': Input,\n  'modules/uiNode': UINode,\n});\n\nexport default Quill;\n", "import { ClassAttributor, Scope } from 'parchment';\n\nclass IndentAttributor extends ClassAttributor {\n  add(node: HTMLElement, value: string | number) {\n    let normalizedValue = 0;\n    if (value === '+1' || value === '-1') {\n      const indent = this.value(node) || 0;\n      normalizedValue = value === '+1' ? indent + 1 : indent - 1;\n    } else if (typeof value === 'number') {\n      normalizedValue = value;\n    }\n    if (normalizedValue === 0) {\n      this.remove(node);\n      return true;\n    }\n    return super.add(node, normalizedValue.toString());\n  }\n\n  canAdd(node: HTMLElement, value: string) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\n  }\n\n  value(node: HTMLElement) {\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\n  }\n}\n\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  // @ts-expect-error\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8],\n});\n\nexport default IndentClass;\n", "import Block from '../blots/block.js';\n\nclass Blockquote extends Block {\n  static blotName = 'blockquote';\n  static tagName = 'blockquote';\n}\n\nexport default Blockquote;\n", "import Block from '../blots/block.js';\n\nclass Header extends Block {\n  static blotName = 'header';\n  static tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n\n  static formats(domNode: Element) {\n    return this.tagName.indexOf(domNode.tagName) + 1;\n  }\n}\n\nexport default Header;\n", "import Block from '../blots/block.js';\nimport Container from '../blots/container.js';\nimport type Scroll from '../blots/scroll.js';\nimport Quill from '../core/quill.js';\n\nclass ListContainer extends Container {}\nListContainer.blotName = 'list-container';\nListContainer.tagName = 'OL';\n\nclass ListItem extends Block {\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    node.setAttribute('data-list', value);\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('data-list') || undefined;\n  }\n\n  static register() {\n    Quill.register(ListContainer);\n  }\n\n  constructor(scroll: Scroll, domNode: HTMLElement) {\n    super(scroll, domNode);\n    const ui = domNode.ownerDocument.createElement('span');\n    const listEventHandler = (e: Event) => {\n      if (!scroll.isEnabled()) return;\n      const format = this.statics.formats(domNode, scroll);\n      if (format === 'checked') {\n        this.format('list', 'unchecked');\n        e.preventDefault();\n      } else if (format === 'unchecked') {\n        this.format('list', 'checked');\n        e.preventDefault();\n      }\n    };\n    ui.addEventListener('mousedown', listEventHandler);\n    ui.addEventListener('touchstart', listEventHandler);\n    this.attachUI(ui);\n  }\n\n  format(name: string, value: string) {\n    if (name === this.statics.blotName && value) {\n      this.domNode.setAttribute('data-list', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nListItem.blotName = 'list';\nListItem.tagName = 'LI';\n\nListContainer.allowedChildren = [ListItem];\nListItem.requiredContainer = ListContainer;\n\nexport { ListContainer, ListItem as default };\n", "import Inline from '../blots/inline.js';\n\nclass Bold extends Inline {\n  static blotName = 'bold';\n  static tagName = ['STRONG', 'B'];\n\n  static create() {\n    return super.create();\n  }\n\n  static formats() {\n    return true;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (this.domNode.tagName !== this.statics.tagName[0]) {\n      this.replaceWith(this.statics.blotName);\n    }\n  }\n}\n\nexport default Bold;\n", "import Bold from './bold.js';\n\nclass Italic extends Bold {\n  static blotName = 'italic';\n  static tagName = ['EM', 'I'];\n}\n\nexport default Italic;\n", "import Inline from '../blots/inline.js';\n\nclass Link extends Inline {\n  static blotName = 'link';\n  static tagName = 'A';\n  static SANITIZED_URL = 'about:blank';\n  static PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel', 'sms'];\n\n  static create(value: string) {\n    const node = super.create(value) as HTMLElement;\n    node.setAttribute('href', this.sanitize(value));\n    node.setAttribute('rel', 'noopener noreferrer');\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name: string, value: unknown) {\n    if (name !== this.statics.blotName || !value) {\n      super.format(name, value);\n    } else {\n      // @ts-expect-error\n      this.domNode.setAttribute('href', this.constructor.sanitize(value));\n    }\n  }\n}\n\nfunction sanitize(url: string, protocols: string[]) {\n  const anchor = document.createElement('a');\n  anchor.href = url;\n  const protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexport { Link as default, sanitize };\n", "import Inline from '../blots/inline.js';\n\nclass Script extends Inline {\n  static blotName = 'script';\n  static tagName = ['SUB', 'SUP'];\n\n  static create(value: 'super' | 'sub' | (string & {})) {\n    if (value === 'super') {\n      return document.createElement('sup');\n    }\n    if (value === 'sub') {\n      return document.createElement('sub');\n    }\n    return super.create(value);\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.tagName === 'SUB') return 'sub';\n    if (domNode.tagName === 'SUP') return 'super';\n    return undefined;\n  }\n}\n\nexport default Script;\n", "import Bold from './bold.js';\n\nclass Strike extends Bold {\n  static blotName = 'strike';\n  static tagName = ['S', 'STRIKE'];\n}\n\nexport default Strike;\n", "import Inline from '../blots/inline.js';\n\nclass Underline extends Inline {\n  static blotName = 'underline';\n  static tagName = 'U';\n}\n\nexport default Underline;\n", "import Embed from '../blots/embed.js';\n\nclass Formula extends Embed {\n  static blotName = 'formula';\n  static className = 'ql-formula';\n  static tagName = 'SPAN';\n\n  static create(value: string) {\n    // @ts-expect-error\n    if (window.katex == null) {\n      throw new Error('Formula module requires KaTeX.');\n    }\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      // @ts-expect-error\n      window.katex.render(value, node, {\n        throwOnError: false,\n        errorColor: '#f00',\n      });\n      node.setAttribute('data-value', value);\n    }\n    return node;\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('data-value');\n  }\n\n  html() {\n    const { formula } = this.value();\n    return `<span>${formula}</span>`;\n  }\n}\n\nexport default Formula;\n", "import { EmbedBlot } from 'parchment';\nimport { sanitize } from './link.js';\n\nconst ATTRIBUTES = ['alt', 'height', 'width'];\n\nclass Image extends EmbedBlot {\n  static blotName = 'image';\n  static tagName = 'IMG';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      node.setAttribute('src', this.sanitize(value));\n    }\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static match(url: string) {\n    return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url);\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLImageElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n}\n\nexport default Image;\n", "import { BlockEmbed } from '../blots/block.js';\nimport Link from './link.js';\n\nconst ATTRIBUTES = ['height', 'width'];\n\nclass Video extends BlockEmbed {\n  static blotName = 'video';\n  static className = 'ql-video';\n  static tagName = 'IFRAME';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    node.setAttribute('frameborder', '0');\n    node.setAttribute('allowfullscreen', 'true');\n    node.setAttribute('src', this.sanitize(value));\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static sanitize(url: string) {\n    return Link.sanitize(url);\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLVideoElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  html() {\n    const { video } = this.value();\n    return `<a href=\"${video}\">${video}</a>`;\n  }\n}\n\nexport default Video;\n", "import Delta from 'quill-delta';\nimport { ClassAttributor, Scope } from 'parchment';\nimport type { Blot, ScrollBlot } from 'parchment';\nimport Inline from '../blots/inline.js';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport { blockDelta } from '../blots/block.js';\nimport BreakBlot from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport CodeBlock, { CodeBlockContainer } from '../formats/code.js';\nimport { traverse } from './clipboard.js';\n\nconst TokenAttributor = new ClassAttributor('code-token', 'hljs', {\n  scope: Scope.INLINE,\n});\nclass CodeToken extends Inline {\n  static formats(node: Element, scroll: ScrollBlot) {\n    while (node != null && node !== scroll.domNode) {\n      if (node.classList && node.classList.contains(CodeBlock.className)) {\n        // @ts-expect-error\n        return super.formats(node, scroll);\n      }\n      // @ts-expect-error\n      node = node.parentNode;\n    }\n    return undefined;\n  }\n\n  constructor(scroll: ScrollBlot, domNode: Node, value: unknown) {\n    // @ts-expect-error\n    super(scroll, domNode, value);\n    TokenAttributor.add(this.domNode, value);\n  }\n\n  format(format: string, value: unknown) {\n    if (format !== CodeToken.blotName) {\n      super.format(format, value);\n    } else if (value) {\n      TokenAttributor.add(this.domNode, value);\n    } else {\n      TokenAttributor.remove(this.domNode);\n      this.domNode.classList.remove(this.statics.className);\n    }\n  }\n\n  optimize(...args: unknown[]) {\n    // @ts-expect-error\n    super.optimize(...args);\n    if (!TokenAttributor.value(this.domNode)) {\n      this.unwrap();\n    }\n  }\n}\nCodeToken.blotName = 'code-token';\nCodeToken.className = 'ql-token';\n\nclass SyntaxCodeBlock extends CodeBlock {\n  static create(value: unknown) {\n    const domNode = super.create(value);\n    if (typeof value === 'string') {\n      domNode.setAttribute('data-language', value);\n    }\n    return domNode;\n  }\n\n  static formats(domNode: Node) {\n    // @ts-expect-error\n    return domNode.getAttribute('data-language') || 'plain';\n  }\n\n  static register() {} // Syntax module will register\n\n  format(name: string, value: unknown) {\n    if (name === this.statics.blotName && value) {\n      // @ts-expect-error\n      this.domNode.setAttribute('data-language', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  replaceWith(name: string | Blot, value?: any) {\n    this.formatAt(0, this.length(), CodeToken.blotName, false);\n    return super.replaceWith(name, value);\n  }\n}\n\nclass SyntaxCodeBlockContainer extends CodeBlockContainer {\n  forceNext?: boolean;\n  cachedText?: string | null;\n\n  attach() {\n    super.attach();\n    this.forceNext = false;\n    // @ts-expect-error\n    this.scroll.emitMount(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n      this.children.forEach((child) => {\n        // @ts-expect-error\n        child.format(name, value);\n      });\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n    }\n    super.formatAt(index, length, name, value);\n  }\n\n  highlight(\n    highlight: (text: string, language: string) => Delta,\n    forced = false,\n  ) {\n    if (this.children.head == null) return;\n    const nodes = Array.from(this.domNode.childNodes).filter(\n      (node) => node !== this.uiNode,\n    );\n    const text = `${nodes.map((node) => node.textContent).join('\\n')}\\n`;\n    const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n    if (forced || this.forceNext || this.cachedText !== text) {\n      if (text.trim().length > 0 || this.cachedText == null) {\n        const oldDelta = this.children.reduce((delta, child) => {\n          // @ts-expect-error\n          return delta.concat(blockDelta(child, false));\n        }, new Delta());\n        const delta = highlight(text, language);\n        oldDelta.diff(delta).reduce((index, { retain, attributes }) => {\n          // Should be all retains\n          if (!retain) return index;\n          if (attributes) {\n            Object.keys(attributes).forEach((format) => {\n              if (\n                [SyntaxCodeBlock.blotName, CodeToken.blotName].includes(format)\n              ) {\n                // @ts-expect-error\n                this.formatAt(index, retain, format, attributes[format]);\n              }\n            });\n          }\n          // @ts-expect-error\n          return index + retain;\n        }, 0);\n      }\n      this.cachedText = text;\n      this.forceNext = false;\n    }\n  }\n\n  html(index: number, length: number) {\n    const [codeBlock] = this.children.find(index);\n    const language = codeBlock\n      ? SyntaxCodeBlock.formats(codeBlock.domNode)\n      : 'plain';\n\n    return `<pre data-language=\"${language}\">\\n${escapeText(\n      this.code(index, length),\n    )}\\n</pre>`;\n  }\n\n  optimize(context: Record<string, any>) {\n    super.optimize(context);\n    if (\n      this.parent != null &&\n      this.children.head != null &&\n      this.uiNode != null\n    ) {\n      const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n      // @ts-expect-error\n      if (language !== this.uiNode.value) {\n        // @ts-expect-error\n        this.uiNode.value = language;\n      }\n    }\n  }\n}\n\nSyntaxCodeBlockContainer.allowedChildren = [SyntaxCodeBlock];\nSyntaxCodeBlock.requiredContainer = SyntaxCodeBlockContainer;\nSyntaxCodeBlock.allowedChildren = [CodeToken, CursorBlot, TextBlot, BreakBlot];\n\ninterface SyntaxOptions {\n  interval: number;\n  languages: { key: string; label: string }[];\n  hljs: any;\n}\n\nconst highlight = (lib: any, language: string, text: string) => {\n  if (typeof lib.versionString === 'string') {\n    const majorVersion = lib.versionString.split('.')[0];\n    if (parseInt(majorVersion, 10) >= 11) {\n      return lib.highlight(text, { language }).value;\n    }\n  }\n  return lib.highlight(language, text).value;\n};\n\nclass Syntax extends Module<SyntaxOptions> {\n  static DEFAULTS: SyntaxOptions & { hljs: any };\n\n  static register() {\n    Quill.register(CodeToken, true);\n    Quill.register(SyntaxCodeBlock, true);\n    Quill.register(SyntaxCodeBlockContainer, true);\n  }\n\n  languages: Record<string, true>;\n\n  constructor(quill: Quill, options: Partial<SyntaxOptions>) {\n    super(quill, options);\n    if (this.options.hljs == null) {\n      throw new Error(\n        'Syntax module requires highlight.js. Please include the library on the page before Quill.',\n      );\n    }\n    // @ts-expect-error Fix me later\n    this.languages = this.options.languages.reduce(\n      (memo: Record<string, unknown>, { key }) => {\n        memo[key] = true;\n        return memo;\n      },\n      {},\n    );\n    this.highlightBlot = this.highlightBlot.bind(this);\n    this.initListener();\n    this.initTimer();\n  }\n\n  initListener() {\n    this.quill.on(Quill.events.SCROLL_BLOT_MOUNT, (blot: Blot) => {\n      if (!(blot instanceof SyntaxCodeBlockContainer)) return;\n      const select = this.quill.root.ownerDocument.createElement('select');\n      // @ts-expect-error Fix me later\n      this.options.languages.forEach(({ key, label }) => {\n        const option = select.ownerDocument.createElement('option');\n        option.textContent = label;\n        option.setAttribute('value', key);\n        select.appendChild(option);\n      });\n      select.addEventListener('change', () => {\n        blot.format(SyntaxCodeBlock.blotName, select.value);\n        this.quill.root.focus(); // Prevent scrolling\n        this.highlight(blot, true);\n      });\n      if (blot.uiNode == null) {\n        blot.attachUI(select);\n        if (blot.children.head) {\n          select.value = SyntaxCodeBlock.formats(blot.children.head.domNode);\n        }\n      }\n    });\n  }\n\n  initTimer() {\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        this.highlight();\n        timer = null;\n      }, this.options.interval);\n    });\n  }\n\n  highlight(blot: SyntaxCodeBlockContainer | null = null, force = false) {\n    if (this.quill.selection.composing) return;\n    this.quill.update(Quill.sources.USER);\n    const range = this.quill.getSelection();\n    const blots =\n      blot == null\n        ? this.quill.scroll.descendants(SyntaxCodeBlockContainer)\n        : [blot];\n    blots.forEach((container) => {\n      container.highlight(this.highlightBlot, force);\n    });\n    this.quill.update(Quill.sources.SILENT);\n    if (range != null) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    }\n  }\n\n  highlightBlot(text: string, language = 'plain') {\n    language = this.languages[language] ? language : 'plain';\n    if (language === 'plain') {\n      return escapeText(text)\n        .split('\\n')\n        .reduce((delta, line, i) => {\n          if (i !== 0) {\n            delta.insert('\\n', { [CodeBlock.blotName]: language });\n          }\n          return delta.insert(line);\n        }, new Delta());\n    }\n    const container = this.quill.root.ownerDocument.createElement('div');\n    container.classList.add(CodeBlock.className);\n    container.innerHTML = highlight(this.options.hljs, language, text);\n    return traverse(\n      this.quill.scroll,\n      container,\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          const value = TokenAttributor.value(node);\n          if (value) {\n            return delta.compose(\n              new Delta().retain(delta.length(), {\n                [CodeToken.blotName]: value,\n              }),\n            );\n          }\n          return delta;\n        },\n      ],\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          return node.data.split('\\n').reduce((memo, nodeText, i) => {\n            if (i !== 0) memo.insert('\\n', { [CodeBlock.blotName]: language });\n            return memo.insert(nodeText);\n          }, delta);\n        },\n      ],\n      new WeakMap(),\n    );\n  }\n}\nSyntax.DEFAULTS = {\n  hljs: (() => {\n    return window.hljs;\n  })(),\n  interval: 1000,\n  languages: [\n    { key: 'plain', label: 'Plain' },\n    { key: 'bash', label: 'Bash' },\n    { key: 'cpp', label: 'C++' },\n    { key: 'cs', label: 'C#' },\n    { key: 'css', label: 'CSS' },\n    { key: 'diff', label: 'Diff' },\n    { key: 'xml', label: 'HTML/XML' },\n    { key: 'java', label: 'Java' },\n    { key: 'javascript', label: 'JavaScript' },\n    { key: 'markdown', label: 'Markdown' },\n    { key: 'php', label: 'PHP' },\n    { key: 'python', label: 'Python' },\n    { key: 'ruby', label: 'Ruby' },\n    { key: 'sql', label: 'SQL' },\n  ],\n};\n\nexport { SyntaxCodeBlock as CodeBlock, CodeToken, Syntax as default };\n", "import Delta from 'quill-delta';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:toolbar');\n\ntype Handler = (this: Toolbar, value: any) => void;\n\nexport type ToolbarConfig = Array<\n  string[] | Array<string | Record<string, unknown>>\n>;\nexport interface ToolbarProps {\n  container?: HTMLElement | ToolbarConfig | null;\n  handlers?: Record<string, Handler>;\n  option?: number;\n  module?: boolean;\n  theme?: boolean;\n}\n\nclass Toolbar extends Module<ToolbarProps> {\n  static DEFAULTS: ToolbarProps;\n\n  container?: HTMLElement | null;\n  controls: [string, HTMLElement][];\n  handlers: Record<string, Handler>;\n\n  constructor(quill: Quill, options: Partial<ToolbarProps>) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      const container = document.createElement('div');\n      container.setAttribute('role', 'toolbar');\n      addControls(container, this.options.container);\n      quill.container?.parentNode?.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      this.container = document.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      debug.error('Container required for toolbar', this.options);\n      return;\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    if (this.options.handlers) {\n      Object.keys(this.options.handlers).forEach((format) => {\n        const handler = this.options.handlers?.[format];\n        if (handler) {\n          this.addHandler(format, handler);\n        }\n      });\n    }\n    Array.from(this.container.querySelectorAll('button, select')).forEach(\n      (input) => {\n        // @ts-expect-error\n        this.attach(input);\n      },\n    );\n    this.quill.on(Quill.events.EDITOR_CHANGE, () => {\n      const [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format: string, handler: Handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input: HTMLElement) {\n    let format = Array.from(input.classList).find((className) => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (\n      this.handlers[format] == null &&\n      this.quill.scroll.query(format) == null\n    ) {\n      debug.warn('ignoring attaching to nonexistent format', format, input);\n      return;\n    }\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, (e) => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        // @ts-expect-error\n        if (input.selectedIndex < 0) return;\n        // @ts-expect-error\n        const selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          // @ts-expect-error\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      const [range] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (\n        // @ts-expect-error\n        this.quill.scroll.query(format).prototype instanceof EmbedBlot\n      ) {\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\n        if (!value) return;\n        this.quill.updateContents(\n          new Delta()\n            // @ts-expect-error Fix me later\n            .retain(range.index)\n            // @ts-expect-error Fix me later\n            .delete(range.length)\n            .insert({ [format]: value }),\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    this.controls.push([format, input]);\n  }\n\n  update(range: Range | null) {\n    const formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach((pair) => {\n      const [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option: HTMLOptionElement | null = null;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          // @ts-expect-error TODO fix me later\n          input.value = ''; // TODO make configurable?\n          // @ts-expect-error TODO fix me later\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else if (range == null) {\n        input.classList.remove('ql-active');\n        input.setAttribute('aria-pressed', 'false');\n      } else if (input.hasAttribute('value')) {\n        // both being null should match (default values)\n        // '1' should match with 1 (headers)\n        const value = formats[format] as boolean | number | string | object;\n        const isActive =\n          value === input.getAttribute('value') ||\n          (value != null && value.toString() === input.getAttribute('value')) ||\n          (value == null && !input.getAttribute('value'));\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      } else {\n        const isActive = formats[format] != null;\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\nfunction addButton(container: HTMLElement, format: string, value?: string) {\n  const input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(`ql-${format}`);\n  input.setAttribute('aria-pressed', 'false');\n  if (value != null) {\n    input.value = value;\n    input.setAttribute('aria-label', `${format}: ${value}`);\n  } else {\n    input.setAttribute('aria-label', format);\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(\n  container: HTMLElement,\n  groups:\n    | (string | Record<string, unknown>)[][]\n    | (string | Record<string, unknown>)[],\n) {\n  if (!Array.isArray(groups[0])) {\n    // @ts-expect-error\n    groups = [groups];\n  }\n  groups.forEach((controls: any) => {\n    const group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach((control: any) => {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        const format = Object.keys(control)[0];\n        const value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(\n  container: HTMLElement,\n  format: string,\n  values: Array<string | boolean>,\n) {\n  const input = document.createElement('select');\n  input.classList.add(`ql-${format}`);\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', String(value));\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean() {\n      const range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        const formats = this.quill.getFormat();\n        Object.keys(formats).forEach((name) => {\n          // Clean functionality in existing apps only clean inline formats\n          if (this.quill.scroll.query(name, Scope.INLINE) != null) {\n            this.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range.index, range.length, Quill.sources.USER);\n      }\n    },\n    direction(value) {\n      const { align } = this.quill.getFormat();\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      // @ts-expect-error\n      const indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    },\n  },\n};\n\nexport { Toolbar as default, addControls };\n", "import alignLeftIcon from '../assets/icons/align-left.svg';\nimport alignCenterIcon from '../assets/icons/align-center.svg';\nimport alignRightIcon from '../assets/icons/align-right.svg';\nimport alignJustifyIcon from '../assets/icons/align-justify.svg';\nimport backgroundIcon from '../assets/icons/background.svg';\nimport blockquoteIcon from '../assets/icons/blockquote.svg';\nimport boldIcon from '../assets/icons/bold.svg';\nimport cleanIcon from '../assets/icons/clean.svg';\nimport codeIcon from '../assets/icons/code.svg';\nimport colorIcon from '../assets/icons/color.svg';\nimport directionLeftToRightIcon from '../assets/icons/direction-ltr.svg';\nimport directionRightToLeftIcon from '../assets/icons/direction-rtl.svg';\nimport formulaIcon from '../assets/icons/formula.svg';\nimport headerIcon from '../assets/icons/header.svg';\nimport header2Icon from '../assets/icons/header-2.svg';\nimport header3Icon from '../assets/icons/header-3.svg';\nimport header4Icon from '../assets/icons/header-4.svg';\nimport header5Icon from '../assets/icons/header-5.svg';\nimport header6Icon from '../assets/icons/header-6.svg';\nimport italicIcon from '../assets/icons/italic.svg';\nimport imageIcon from '../assets/icons/image.svg';\nimport indentIcon from '../assets/icons/indent.svg';\nimport outdentIcon from '../assets/icons/outdent.svg';\nimport linkIcon from '../assets/icons/link.svg';\nimport listBulletIcon from '../assets/icons/list-bullet.svg';\nimport listCheckIcon from '../assets/icons/list-check.svg';\nimport listOrderedIcon from '../assets/icons/list-ordered.svg';\nimport subscriptIcon from '../assets/icons/subscript.svg';\nimport superscriptIcon from '../assets/icons/superscript.svg';\nimport strikeIcon from '../assets/icons/strike.svg';\nimport tableIcon from '../assets/icons/table.svg';\nimport underlineIcon from '../assets/icons/underline.svg';\nimport videoIcon from '../assets/icons/video.svg';\n\nexport default {\n  align: {\n    '': alignLeftIcon,\n    center: alignCenterIcon,\n    right: alignRightIcon,\n    justify: alignJustifyIcon,\n  },\n  background: backgroundIcon,\n  blockquote: blockquoteIcon,\n  bold: boldIcon,\n  clean: cleanIcon,\n  code: codeIcon,\n  'code-block': codeIcon,\n  color: colorIcon,\n  direction: {\n    '': directionLeftToRightIcon,\n    rtl: directionRightToLeftIcon,\n  },\n  formula: formulaIcon,\n  header: {\n    '1': headerIcon,\n    '2': header2Icon,\n    '3': header3Icon,\n    '4': header4Icon,\n    '5': header5Icon,\n    '6': header6Icon,\n  },\n  italic: italicIcon,\n  image: imageIcon,\n  indent: {\n    '+1': indentIcon,\n    '-1': outdentIcon,\n  },\n  link: linkIcon,\n  list: {\n    bullet: listBulletIcon,\n    check: listCheckIcon,\n    ordered: listOrderedIcon,\n  },\n  script: {\n    sub: subscriptIcon,\n    super: superscriptIcon,\n  },\n  strike: strikeIcon,\n  table: tableIcon,\n  underline: underlineIcon,\n  video: videoIcon,\n};\n", "import DropdownIcon from '../assets/icons/dropdown.svg';\n\nlet optionsCounter = 0;\n\nfunction toggleAriaAttribute(element: HTMLElement, attribute: string) {\n  element.setAttribute(\n    attribute,\n    `${!(element.getAttribute(attribute) === 'true')}`,\n  );\n}\n\nclass Picker {\n  select: HTMLSelectElement;\n  container: HTMLElement;\n  label: HTMLElement;\n\n  constructor(select: HTMLSelectElement) {\n    this.select = select;\n    this.container = document.createElement('span');\n    this.buildPicker();\n    this.select.style.display = 'none';\n    // @ts-expect-error Fix me later\n    this.select.parentNode.insertBefore(this.container, this.select);\n\n    this.label.addEventListener('mousedown', () => {\n      this.togglePicker();\n    });\n    this.label.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.togglePicker();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n    this.select.addEventListener('change', this.update.bind(this));\n  }\n\n  togglePicker() {\n    this.container.classList.toggle('ql-expanded');\n    // Toggle aria-expanded and aria-hidden to make the picker accessible\n    toggleAriaAttribute(this.label, 'aria-expanded');\n    // @ts-expect-error\n    toggleAriaAttribute(this.options, 'aria-hidden');\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = document.createElement('span');\n    // @ts-expect-error\n    item.tabIndex = '0';\n    item.setAttribute('role', 'button');\n    item.classList.add('ql-picker-item');\n    const value = option.getAttribute('value');\n    if (value) {\n      item.setAttribute('data-value', value);\n    }\n    if (option.textContent) {\n      item.setAttribute('data-label', option.textContent);\n    }\n    item.addEventListener('click', () => {\n      this.selectItem(item, true);\n    });\n    item.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.selectItem(item, true);\n          event.preventDefault();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n\n    return item;\n  }\n\n  buildLabel() {\n    const label = document.createElement('span');\n    label.classList.add('ql-picker-label');\n    label.innerHTML = DropdownIcon;\n    // @ts-expect-error\n    label.tabIndex = '0';\n    label.setAttribute('role', 'button');\n    label.setAttribute('aria-expanded', 'false');\n    this.container.appendChild(label);\n    return label;\n  }\n\n  buildOptions() {\n    const options = document.createElement('span');\n    options.classList.add('ql-picker-options');\n\n    // Don't want screen readers to read this until options are visible\n    options.setAttribute('aria-hidden', 'true');\n    // @ts-expect-error\n    options.tabIndex = '-1';\n\n    // Need a unique id for aria-controls\n    options.id = `ql-picker-options-${optionsCounter}`;\n    optionsCounter += 1;\n    this.label.setAttribute('aria-controls', options.id);\n\n    // @ts-expect-error\n    this.options = options;\n\n    Array.from(this.select.options).forEach((option) => {\n      const item = this.buildItem(option);\n      options.appendChild(item);\n      if (option.selected === true) {\n        this.selectItem(item);\n      }\n    });\n    this.container.appendChild(options);\n  }\n\n  buildPicker() {\n    Array.from(this.select.attributes).forEach((item) => {\n      this.container.setAttribute(item.name, item.value);\n    });\n    this.container.classList.add('ql-picker');\n    this.label = this.buildLabel();\n    this.buildOptions();\n  }\n\n  escape() {\n    // Close menu and return focus to trigger label\n    this.close();\n    // Need setTimeout for accessibility to ensure that the browser executes\n    // focus on the next process thread and after any DOM content changes\n    setTimeout(() => this.label.focus(), 1);\n  }\n\n  close() {\n    this.container.classList.remove('ql-expanded');\n    this.label.setAttribute('aria-expanded', 'false');\n    // @ts-expect-error\n    this.options.setAttribute('aria-hidden', 'true');\n  }\n\n  selectItem(item: HTMLElement | null, trigger = false) {\n    const selected = this.container.querySelector('.ql-selected');\n    if (item === selected) return;\n    if (selected != null) {\n      selected.classList.remove('ql-selected');\n    }\n    if (item == null) return;\n    item.classList.add('ql-selected');\n    // @ts-expect-error Fix me later\n    this.select.selectedIndex = Array.from(item.parentNode.children).indexOf(\n      item,\n    );\n    if (item.hasAttribute('data-value')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-value', item.getAttribute('data-value'));\n    } else {\n      this.label.removeAttribute('data-value');\n    }\n    if (item.hasAttribute('data-label')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-label', item.getAttribute('data-label'));\n    } else {\n      this.label.removeAttribute('data-label');\n    }\n    if (trigger) {\n      this.select.dispatchEvent(new Event('change'));\n      this.close();\n    }\n  }\n\n  update() {\n    let option;\n    if (this.select.selectedIndex > -1) {\n      const item =\n        // @ts-expect-error Fix me later\n        this.container.querySelector('.ql-picker-options').children[\n          this.select.selectedIndex\n        ];\n      option = this.select.options[this.select.selectedIndex];\n      // @ts-expect-error\n      this.selectItem(item);\n    } else {\n      this.selectItem(null);\n    }\n    const isActive =\n      option != null &&\n      option !== this.select.querySelector('option[selected]');\n    this.label.classList.toggle('ql-active', isActive);\n  }\n}\n\nexport default Picker;\n", "import Picker from './picker.js';\n\nclass ColorPicker extends Picker {\n  constructor(select: HTMLSelectElement, label: string) {\n    super(select);\n    this.label.innerHTML = label;\n    this.container.classList.add('ql-color-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item'))\n      .slice(0, 7)\n      .forEach((item) => {\n        item.classList.add('ql-primary');\n      });\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = super.buildItem(option);\n    item.style.backgroundColor = option.getAttribute('value') || '';\n    return item;\n  }\n\n  selectItem(item: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(item, trigger);\n    const colorLabel = this.label.querySelector<HTMLElement>('.ql-color-label');\n    const value = item ? item.getAttribute('data-value') || '' : '';\n    if (colorLabel) {\n      if (colorLabel.tagName === 'line') {\n        colorLabel.style.stroke = value;\n      } else {\n        colorLabel.style.fill = value;\n      }\n    }\n  }\n}\n\nexport default ColorPicker;\n", "import Picker from './picker.js';\n\nclass IconPicker extends Picker {\n  defaultItem: HTMLElement | null;\n\n  constructor(select: HTMLSelectElement, icons: Record<string, string>) {\n    super(select);\n    this.container.classList.add('ql-icon-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item')).forEach(\n      (item) => {\n        item.innerHTML = icons[item.getAttribute('data-value') || ''];\n      },\n    );\n    this.defaultItem = this.container.querySelector('.ql-selected');\n    this.selectItem(this.defaultItem);\n  }\n\n  selectItem(target: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(target, trigger);\n    const item = target || this.defaultItem;\n    if (item != null) {\n      if (this.label.innerHTML === item.innerHTML) return;\n      this.label.innerHTML = item.innerHTML;\n    }\n  }\n}\n\nexport default IconPicker;\n", "import type Quill from '../core.js';\nimport type { Bounds } from '../core/selection.js';\n\nconst isScrollable = (el: Element) => {\n  const { overflowY } = getComputedStyle(el, null);\n  return overflowY !== 'visible' && overflowY !== 'clip';\n};\n\nclass Tooltip {\n  quill: Quill;\n  boundsContainer: HTMLElement;\n  root: HTMLDivElement;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    this.quill = quill;\n    this.boundsContainer = boundsContainer || document.body;\n    this.root = quill.addContainer('ql-tooltip');\n    // @ts-expect-error\n    this.root.innerHTML = this.constructor.TEMPLATE;\n    if (isScrollable(this.quill.root)) {\n      this.quill.root.addEventListener('scroll', () => {\n        this.root.style.marginTop = `${-1 * this.quill.root.scrollTop}px`;\n      });\n    }\n    this.hide();\n  }\n\n  hide() {\n    this.root.classList.add('ql-hidden');\n  }\n\n  position(reference: Bounds) {\n    const left =\n      reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n    // root.scrollTop should be 0 if scrollContainer !== root\n    const top = reference.bottom + this.quill.root.scrollTop;\n    this.root.style.left = `${left}px`;\n    this.root.style.top = `${top}px`;\n    this.root.classList.remove('ql-flip');\n    const containerBounds = this.boundsContainer.getBoundingClientRect();\n    const rootBounds = this.root.getBoundingClientRect();\n    let shift = 0;\n    if (rootBounds.right > containerBounds.right) {\n      shift = containerBounds.right - rootBounds.right;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.left < containerBounds.left) {\n      shift = containerBounds.left - rootBounds.left;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.bottom > containerBounds.bottom) {\n      const height = rootBounds.bottom - rootBounds.top;\n      const verticalShift = reference.bottom - reference.top + height;\n      this.root.style.top = `${top - verticalShift}px`;\n      this.root.classList.add('ql-flip');\n    }\n    return shift;\n  }\n\n  show() {\n    this.root.classList.remove('ql-editing');\n    this.root.classList.remove('ql-hidden');\n  }\n}\n\nexport default Tooltip;\n", "import { merge } from 'lodash-es';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Theme from '../core/theme.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport ColorPicker from '../ui/color-picker.js';\nimport IconPicker from '../ui/icon-picker.js';\nimport Picker from '../ui/picker.js';\nimport Tooltip from '../ui/tooltip.js';\nimport type { Range } from '../core/selection.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport type Selection from '../core/selection.js';\n\nconst ALIGNS = [false, 'center', 'right', 'justify'];\n\nconst COLORS = [\n  '#000000',\n  '#e60000',\n  '#ff9900',\n  '#ffff00',\n  '#008a00',\n  '#0066cc',\n  '#9933ff',\n  '#ffffff',\n  '#facccc',\n  '#ffebcc',\n  '#ffffcc',\n  '#cce8cc',\n  '#cce0f5',\n  '#ebd6ff',\n  '#bbbbbb',\n  '#f06666',\n  '#ffc266',\n  '#ffff66',\n  '#66b966',\n  '#66a3e0',\n  '#c285ff',\n  '#888888',\n  '#a10000',\n  '#b26b00',\n  '#b2b200',\n  '#006100',\n  '#0047b2',\n  '#6b24b2',\n  '#444444',\n  '#5c0000',\n  '#663d00',\n  '#666600',\n  '#003700',\n  '#002966',\n  '#3d1466',\n];\n\nconst FONTS = [false, 'serif', 'monospace'];\n\nconst HEADERS = ['1', '2', '3', false];\n\nconst SIZES = ['small', false, 'large', 'huge'];\n\nclass BaseTheme extends Theme {\n  pickers: Picker[];\n  tooltip?: Tooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    super(quill, options);\n    const listener = (e: MouseEvent) => {\n      if (!document.body.contains(quill.root)) {\n        document.body.removeEventListener('click', listener);\n        return;\n      }\n      if (\n        this.tooltip != null &&\n        // @ts-expect-error\n        !this.tooltip.root.contains(e.target) &&\n        // @ts-expect-error\n        document.activeElement !== this.tooltip.textbox &&\n        !this.quill.hasFocus()\n      ) {\n        this.tooltip.hide();\n      }\n      if (this.pickers != null) {\n        this.pickers.forEach((picker) => {\n          // @ts-expect-error\n          if (!picker.container.contains(e.target)) {\n            picker.close();\n          }\n        });\n      }\n    };\n    quill.emitter.listenDOM('click', document.body, listener);\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: 'selection'): Selection;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    const module = super.addModule(name);\n    if (name === 'toolbar') {\n      // @ts-expect-error\n      this.extendToolbar(module);\n    }\n    return module;\n  }\n\n  buildButtons(\n    buttons: NodeListOf<HTMLElement>,\n    icons: Record<string, Record<string, string> | string>,\n  ) {\n    Array.from(buttons).forEach((button) => {\n      const className = button.getAttribute('class') || '';\n      className.split(/\\s+/).forEach((name) => {\n        if (!name.startsWith('ql-')) return;\n        name = name.slice('ql-'.length);\n        if (icons[name] == null) return;\n        if (name === 'direction') {\n          // @ts-expect-error\n          button.innerHTML = icons[name][''] + icons[name].rtl;\n        } else if (typeof icons[name] === 'string') {\n          // @ts-expect-error\n          button.innerHTML = icons[name];\n        } else {\n          // @ts-expect-error\n          const value = button.value || '';\n          // @ts-expect-error\n          if (value != null && icons[name][value]) {\n            // @ts-expect-error\n            button.innerHTML = icons[name][value];\n          }\n        }\n      });\n    });\n  }\n\n  buildPickers(\n    selects: NodeListOf<HTMLSelectElement>,\n    icons: Record<string, string | Record<string, string>>,\n  ) {\n    this.pickers = Array.from(selects).map((select) => {\n      if (select.classList.contains('ql-align')) {\n        if (select.querySelector('option') == null) {\n          fillSelect(select, ALIGNS);\n        }\n        if (typeof icons.align === 'object') {\n          return new IconPicker(select, icons.align);\n        }\n      }\n      if (\n        select.classList.contains('ql-background') ||\n        select.classList.contains('ql-color')\n      ) {\n        const format = select.classList.contains('ql-background')\n          ? 'background'\n          : 'color';\n        if (select.querySelector('option') == null) {\n          fillSelect(\n            select,\n            COLORS,\n            format === 'background' ? '#ffffff' : '#000000',\n          );\n        }\n        return new ColorPicker(select, icons[format] as string);\n      }\n      if (select.querySelector('option') == null) {\n        if (select.classList.contains('ql-font')) {\n          fillSelect(select, FONTS);\n        } else if (select.classList.contains('ql-header')) {\n          fillSelect(select, HEADERS);\n        } else if (select.classList.contains('ql-size')) {\n          fillSelect(select, SIZES);\n        }\n      }\n      return new Picker(select);\n    });\n    const update = () => {\n      this.pickers.forEach((picker) => {\n        picker.update();\n      });\n    };\n    this.quill.on(Emitter.events.EDITOR_CHANGE, update);\n  }\n}\nBaseTheme.DEFAULTS = merge({}, Theme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        formula() {\n          this.quill.theme.tooltip.edit('formula');\n        },\n        image() {\n          let fileInput = this.container.querySelector(\n            'input.ql-image[type=file]',\n          );\n          if (fileInput == null) {\n            fileInput = document.createElement('input');\n            fileInput.setAttribute('type', 'file');\n            fileInput.setAttribute(\n              'accept',\n              this.quill.uploader.options.mimetypes.join(', '),\n            );\n            fileInput.classList.add('ql-image');\n            fileInput.addEventListener('change', () => {\n              const range = this.quill.getSelection(true);\n              this.quill.uploader.upload(range, fileInput.files);\n              fileInput.value = '';\n            });\n            this.container.appendChild(fileInput);\n          }\n          fileInput.click();\n        },\n        video() {\n          this.quill.theme.tooltip.edit('video');\n        },\n      },\n    },\n  },\n});\n\nclass BaseTooltip extends Tooltip {\n  textbox: HTMLInputElement | null;\n  linkRange?: Range;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    super(quill, boundsContainer);\n    this.textbox = this.root.querySelector('input[type=\"text\"]');\n    this.listen();\n  }\n\n  listen() {\n    // @ts-expect-error Fix me later\n    this.textbox.addEventListener('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.save();\n        event.preventDefault();\n      } else if (event.key === 'Escape') {\n        this.cancel();\n        event.preventDefault();\n      }\n    });\n  }\n\n  cancel() {\n    this.hide();\n    this.restoreFocus();\n  }\n\n  edit(mode = 'link', preview: string | null = null) {\n    this.root.classList.remove('ql-hidden');\n    this.root.classList.add('ql-editing');\n    if (this.textbox == null) return;\n\n    if (preview != null) {\n      this.textbox.value = preview;\n    } else if (mode !== this.root.getAttribute('data-mode')) {\n      this.textbox.value = '';\n    }\n    const bounds = this.quill.getBounds(this.quill.selection.savedRange);\n    if (bounds != null) {\n      this.position(bounds);\n    }\n    this.textbox.select();\n    this.textbox.setAttribute(\n      'placeholder',\n      this.textbox.getAttribute(`data-${mode}`) || '',\n    );\n    this.root.setAttribute('data-mode', mode);\n  }\n\n  restoreFocus() {\n    this.quill.focus({ preventScroll: true });\n  }\n\n  save() {\n    // @ts-expect-error Fix me later\n    let { value } = this.textbox;\n    switch (this.root.getAttribute('data-mode')) {\n      case 'link': {\n        const { scrollTop } = this.quill.root;\n        if (this.linkRange) {\n          this.quill.formatText(\n            this.linkRange,\n            'link',\n            value,\n            Emitter.sources.USER,\n          );\n          delete this.linkRange;\n        } else {\n          this.restoreFocus();\n          this.quill.format('link', value, Emitter.sources.USER);\n        }\n        this.quill.root.scrollTop = scrollTop;\n        break;\n      }\n      case 'video': {\n        value = extractVideoUrl(value);\n      } // eslint-disable-next-line no-fallthrough\n      case 'formula': {\n        if (!value) break;\n        const range = this.quill.getSelection(true);\n        if (range != null) {\n          const index = range.index + range.length;\n          this.quill.insertEmbed(\n            index,\n            // @ts-expect-error Fix me later\n            this.root.getAttribute('data-mode'),\n            value,\n            Emitter.sources.USER,\n          );\n          if (this.root.getAttribute('data-mode') === 'formula') {\n            this.quill.insertText(index + 1, ' ', Emitter.sources.USER);\n          }\n          this.quill.setSelection(index + 2, Emitter.sources.USER);\n        }\n        break;\n      }\n      default:\n    }\n    // @ts-expect-error Fix me later\n    this.textbox.value = '';\n    this.hide();\n  }\n}\n\nfunction extractVideoUrl(url: string) {\n  let match =\n    url.match(\n      /^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtube\\.com\\/watch.*v=([a-zA-Z0-9_-]+)/,\n    ) ||\n    url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/);\n  if (match) {\n    return `${match[1] || 'https'}://www.youtube.com/embed/${\n      match[2]\n    }?showinfo=0`;\n  }\n  // eslint-disable-next-line no-cond-assign\n  if ((match = url.match(/^(?:(https?):\\/\\/)?(?:www\\.)?vimeo\\.com\\/(\\d+)/))) {\n    return `${match[1] || 'https'}://player.vimeo.com/video/${match[2]}/`;\n  }\n  return url;\n}\n\nfunction fillSelect(\n  select: HTMLSelectElement,\n  values: Array<string | boolean>,\n  defaultValue: unknown = false,\n) {\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value === defaultValue) {\n      option.setAttribute('selected', 'selected');\n    } else {\n      option.setAttribute('value', String(value));\n    }\n    select.appendChild(option);\n  });\n}\n\nexport { BaseTooltip, BaseTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport { Range } from '../core/selection.js';\nimport type { Bounds } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  ['bold', 'italic', 'link'],\n  [{ header: 1 }, { header: 2 }, 'blockquote'],\n];\n\nclass BubbleTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<span class=\"ql-tooltip-arrow\"></span>',\n    '<div class=\"ql-tooltip-editor\">',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-close\"></a>',\n    '</div>',\n  ].join('');\n\n  constructor(quill: Quill, bounds?: HTMLElement) {\n    super(quill, bounds);\n    this.quill.on(\n      Emitter.events.EDITOR_CHANGE,\n      (type, range, oldRange, source) => {\n        if (type !== Emitter.events.SELECTION_CHANGE) return;\n        if (\n          range != null &&\n          range.length > 0 &&\n          source === Emitter.sources.USER\n        ) {\n          this.show();\n          // Lock our width so we will expand beyond our offsetParent boundaries\n          this.root.style.left = '0px';\n          this.root.style.width = '';\n          this.root.style.width = `${this.root.offsetWidth}px`;\n          const lines = this.quill.getLines(range.index, range.length);\n          if (lines.length === 1) {\n            const bounds = this.quill.getBounds(range);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n          } else {\n            const lastLine = lines[lines.length - 1];\n            const index = this.quill.getIndex(lastLine);\n            const length = Math.min(\n              lastLine.length() - 1,\n              range.index + range.length - index,\n            );\n            const indexBounds = this.quill.getBounds(new Range(index, length));\n            if (indexBounds != null) {\n              this.position(indexBounds);\n            }\n          }\n        } else if (\n          document.activeElement !== this.textbox &&\n          this.quill.hasFocus()\n        ) {\n          this.hide();\n        }\n      },\n    );\n  }\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root.querySelector('.ql-close').addEventListener('click', () => {\n      this.root.classList.remove('ql-editing');\n    });\n    this.quill.on(Emitter.events.SCROLL_OPTIMIZE, () => {\n      // Let selection be restored by toolbar handlers before repositioning\n      setTimeout(() => {\n        if (this.root.classList.contains('ql-hidden')) return;\n        const range = this.quill.getSelection();\n        if (range != null) {\n          const bounds = this.quill.getBounds(range);\n          if (bounds != null) {\n            this.position(bounds);\n          }\n        }\n      }, 1);\n    });\n  }\n\n  cancel() {\n    this.show();\n  }\n\n  position(reference: Bounds) {\n    const shift = super.position(reference);\n    const arrow = this.root.querySelector('.ql-tooltip-arrow');\n    // @ts-expect-error\n    arrow.style.marginLeft = '';\n    if (shift !== 0) {\n      // @ts-expect-error\n      arrow.style.marginLeft = `${-1 * shift - arrow.offsetWidth / 2}px`;\n    }\n    return shift;\n  }\n}\n\nclass BubbleTheme extends BaseTheme {\n  tooltip: BubbleTooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-bubble');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    // @ts-expect-error\n    this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\n    if (toolbar.container != null) {\n      this.tooltip.root.appendChild<HTMLElement>(toolbar.container);\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n    }\n  }\n}\nBubbleTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (!value) {\n            this.quill.format('link', false, Quill.sources.USER);\n          } else {\n            // @ts-expect-error\n            this.quill.theme.tooltip.edit();\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport { BubbleTooltip, BubbleTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport LinkBlot from '../formats/link.js';\nimport { Range } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { Context } from '../modules/keyboard.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\nimport type { ThemeOptions } from '../core/theme.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  [{ header: ['1', '2', '3', false] }],\n  ['bold', 'italic', 'underline', 'link'],\n  [{ list: 'ordered' }, { list: 'bullet' }],\n  ['clean'],\n];\n\nclass SnowTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<a class=\"ql-preview\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"about:blank\"></a>',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-action\"></a>',\n    '<a class=\"ql-remove\"></a>',\n  ].join('');\n\n  preview = this.root.querySelector('a.ql-preview');\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-action')\n      .addEventListener('click', (event) => {\n        if (this.root.classList.contains('ql-editing')) {\n          this.save();\n        } else {\n          // @ts-expect-error Fix me later\n          this.edit('link', this.preview.textContent);\n        }\n        event.preventDefault();\n      });\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-remove')\n      .addEventListener('click', (event) => {\n        if (this.linkRange != null) {\n          const range = this.linkRange;\n          this.restoreFocus();\n          this.quill.formatText(range, 'link', false, Emitter.sources.USER);\n          delete this.linkRange;\n        }\n        event.preventDefault();\n        this.hide();\n      });\n    this.quill.on(\n      Emitter.events.SELECTION_CHANGE,\n      (range, oldRange, source) => {\n        if (range == null) return;\n        if (range.length === 0 && source === Emitter.sources.USER) {\n          const [link, offset] = this.quill.scroll.descendant(\n            LinkBlot,\n            range.index,\n          );\n          if (link != null) {\n            this.linkRange = new Range(range.index - offset, link.length());\n            const preview = LinkBlot.formats(link.domNode);\n            // @ts-expect-error Fix me later\n            this.preview.textContent = preview;\n            // @ts-expect-error Fix me later\n            this.preview.setAttribute('href', preview);\n            this.show();\n            const bounds = this.quill.getBounds(this.linkRange);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n            return;\n          }\n        } else {\n          delete this.linkRange;\n        }\n        this.hide();\n      },\n    );\n  }\n\n  show() {\n    super.show();\n    this.root.removeAttribute('data-mode');\n  }\n}\n\nclass SnowTheme extends BaseTheme {\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-snow');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    if (toolbar.container != null) {\n      toolbar.container.classList.add('ql-snow');\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n      // @ts-expect-error\n      this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n      if (toolbar.container.querySelector('.ql-link')) {\n        this.quill.keyboard.addBinding(\n          { key: 'k', shortKey: true },\n          (_range: Range, context: Context) => {\n            toolbar.handlers.link.call(toolbar, !context.format.link);\n          },\n        );\n      }\n    }\n  }\n}\nSnowTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (value) {\n            const range = this.quill.getSelection();\n            if (range == null || range.length === 0) return;\n            let preview = this.quill.getText(range);\n            if (\n              /^\\S+@\\S+\\.\\S+$/.test(preview) &&\n              preview.indexOf('mailto:') !== 0\n            ) {\n              preview = `mailto:${preview}`;\n            }\n            // @ts-expect-error\n            const { tooltip } = this.quill.theme;\n            tooltip.edit('link', preview);\n          } else {\n            this.quill.format('link', false, Quill.sources.USER);\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport default SnowTheme;\n", "import Quill from './core.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core.js';\n\nimport { AlignClass, AlignStyle } from './formats/align.js';\nimport {\n  DirectionAttribute,\n  DirectionClass,\n  DirectionStyle,\n} from './formats/direction.js';\nimport Indent from './formats/indent.js';\n\nimport Blockquote from './formats/blockquote.js';\nimport Header from './formats/header.js';\nimport List from './formats/list.js';\n\nimport { BackgroundClass, BackgroundStyle } from './formats/background.js';\nimport { ColorClass, ColorStyle } from './formats/color.js';\nimport { FontClass, FontStyle } from './formats/font.js';\nimport { SizeClass, SizeStyle } from './formats/size.js';\n\nimport Bold from './formats/bold.js';\nimport Italic from './formats/italic.js';\nimport Link from './formats/link.js';\nimport Script from './formats/script.js';\nimport Strike from './formats/strike.js';\nimport Underline from './formats/underline.js';\n\nimport Formula from './formats/formula.js';\nimport Image from './formats/image.js';\nimport Video from './formats/video.js';\n\nimport CodeBlock, { Code as InlineCode } from './formats/code.js';\n\nimport Syntax from './modules/syntax.js';\nimport Table from './modules/table.js';\nimport Toolbar from './modules/toolbar.js';\n\nimport Icons from './ui/icons.js';\nimport Picker from './ui/picker.js';\nimport ColorPicker from './ui/color-picker.js';\nimport IconPicker from './ui/icon-picker.js';\nimport Tooltip from './ui/tooltip.js';\n\nimport BubbleTheme from './themes/bubble.js';\nimport SnowTheme from './themes/snow.js';\n\nQuill.register(\n  {\n    'attributors/attribute/direction': DirectionAttribute,\n\n    'attributors/class/align': AlignClass,\n    'attributors/class/background': BackgroundClass,\n    'attributors/class/color': ColorClass,\n    'attributors/class/direction': DirectionClass,\n    'attributors/class/font': FontClass,\n    'attributors/class/size': SizeClass,\n\n    'attributors/style/align': AlignStyle,\n    'attributors/style/background': BackgroundStyle,\n    'attributors/style/color': ColorStyle,\n    'attributors/style/direction': DirectionStyle,\n    'attributors/style/font': FontStyle,\n    'attributors/style/size': SizeStyle,\n  },\n  true,\n);\n\nQuill.register(\n  {\n    'formats/align': AlignClass,\n    'formats/direction': DirectionClass,\n    'formats/indent': Indent,\n\n    'formats/background': BackgroundStyle,\n    'formats/color': ColorStyle,\n    'formats/font': FontClass,\n    'formats/size': SizeClass,\n\n    'formats/blockquote': Blockquote,\n    'formats/code-block': CodeBlock,\n    'formats/header': Header,\n    'formats/list': List,\n\n    'formats/bold': Bold,\n    'formats/code': InlineCode,\n    'formats/italic': Italic,\n    'formats/link': Link,\n    'formats/script': Script,\n    'formats/strike': Strike,\n    'formats/underline': Underline,\n\n    'formats/formula': Formula,\n    'formats/image': Image,\n    'formats/video': Video,\n\n    'modules/syntax': Syntax,\n    'modules/table': Table,\n    'modules/toolbar': Toolbar,\n\n    'themes/bubble': BubbleTheme,\n    'themes/snow': SnowTheme,\n\n    'ui/icons': Icons,\n    'ui/picker': Picker,\n    'ui/icon-picker': IconPicker,\n    'ui/color-picker': ColorPicker,\n    'ui/tooltip': Tooltip,\n  },\n  true,\n);\n\nexport {\n  AttributeMap,\n  Delta,\n  Module,\n  Op,\n  OpIterator,\n  Parchment,\n  Range,\n} from './core.js';\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nexport default Quill;\n"],
  "mappings": "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",
  "names": ["isLine", "blot", "Block", "BlockEmbed", "isUpdatable", "updateContent", "insertInlineContents", "parent", "index", "inlineContents", "reduce", "op", "length", "Op", "attributes", "insert", "text", "insertAt", "leaf", "descendant", "LeafBlot", "formats", "bubbleFormats", "AttributeMap", "diff", "key", "Object", "keys", "isInlineEmbed", "scroll", "query", "Scope", "INLINE", "forEach", "formatAt", "Scroll", "ScrollBlot", "constructor", "registry", "domNode", "_ref", "emitter", "batch", "optimize", "enable", "addEventListener", "e", "handleDragStart", "batchStart", "Array", "isArray", "batchEnd", "mutations", "update", "emitMount", "emit", "Emitter", "events", "SCROLL_BLOT_MOUNT", "emitUnmount", "SCROLL_BLOT_UNMOUNT", "emitEmbedUpdate", "change", "SCROLL_EMBED_UPDATE", "deleteAt", "first", "offset", "line", "last", "ref", "children", "head", "Break", "moveChildren", "remove", "enabled", "arguments", "undefined", "setAttribute", "format", "value", "def", "BLOCK", "create", "statics", "defaultChild", "blotName", "appendChild", "endsWith", "slice", "embed", "insertBefore", "scope", "INLINE_BLOT", "wrapper", "insertContents", "delta", "renderBlocks", "deltaToRenderBlocks", "concat", "Delta", "pop", "shift", "shouldInsertNewlineChar", "type", "newlineCharLength", "lineEndIndex", "name", "refBlot", "refBlotOffset", "find", "split", "renderBlock", "block", "createBlock", "blockEmbed", "isEnabled", "getAttribute", "path", "lines", "Number", "MAX_VALUE", "getLines", "blotIndex", "blotLength", "lengthLeft", "forEachAt", "child", "childIndex", "childLength", "push", "ContainerBlot", "context", "SCROLL_OPTIMIZE", "source", "sources", "USER", "observer", "takeRecords", "filter", "_ref2", "target", "SCROLL_BEFORE_UPDATE", "SCROLL_UPDATE", "updateEmbedAt", "b", "event", "preventDefault", "currentBlockDelta", "splitted", "entries", "_ref3", "isBlockBlot", "BLOT", "_ref4", "className", "tagName", "allowedChildren", "Container", "config", "AlignAttribute", "AlignClass", "AlignStyle", "scope", "Scope", "BLOCK", "whitelist", "Attributor", "ClassAttributor", "StyleAttributor", "ColorAttributor", "ColorClass", "ColorStyle", "StyleAttributor", "value", "domNode", "startsWith", "replace", "hex", "split", "map", "component", "parseInt", "toString", "slice", "join", "ClassAttributor", "scope", "Scope", "INLINE", "BackgroundClass", "BackgroundStyle", "ClassAttributor", "scope", "Scope", "INLINE", "ColorAttributor", "CodeBlockContainer", "CodeBlock", "Code", "Container", "create", "value", "domNode", "setAttribute", "code", "index", "length", "children", "map", "child", "innerText", "join", "slice", "html", "escapeText", "Block", "register", "Quill", "TAB", "Inline", "blotName", "tagName", "className", "allowedChildren", "TextBlot", "Break", "Cursor", "requiredContainer", "config", "DirectionAttribute", "DirectionClass", "DirectionStyle", "scope", "Scope", "BLOCK", "whitelist", "Attributor", "ClassAttributor", "StyleAttributor", "config", "FontClass", "FontStyleAttributor", "FontStyle", "scope", "Scope", "INLINE", "whitelist", "ClassAttributor", "StyleAttributor", "value", "node", "replace", "SizeClass", "SizeStyle", "ClassAttributor", "scope", "Scope", "INLINE", "whitelist", "StyleAttributor", "makeCodeBlockHandler", "indent", "key", "shiftKey", "format", "handler", "range", "_ref", "event", "CodeBlock", "quill", "scroll", "query", "TAB", "length", "insertText", "index", "Quill", "sources", "USER", "setSelection", "SILENT", "lines", "getLines", "forEach", "line", "i", "insertAt", "domNode", "textContent", "startsWith", "deleteAt", "update", "makeEmbedArrowHandler", "where", "altKey", "leaf", "getLeaf", "EmbedBlot", "makeFormatHandler", "shortKey", "context", "makeTableArrowHandler", "up", "collapsed", "cell", "targetRow", "parent", "statics", "blotName", "targetCell", "children", "head", "cur", "prev", "next", "offset", "Math", "min", "targetLine", "table", "normalize", "binding", "cloneDeep", "SHORTKEY", "deleteRange", "_ref2", "formats", "firstFormats", "lastFormats", "AttributeMap", "diff", "deleteText", "Object", "keys", "formatLine", "tableSide", "_table", "row", "import_quill_delta", "debug", "Keyboard", "defaultOptions", "logger", "test", "navigator", "platform", "Module", "match", "evt", "some", "which", "constructor", "options", "bindings", "name", "addBinding", "handleEnter", "metaKey", "ctrlKey", "userAgent", "handleBackspace", "handleDelete", "prefix", "suffix", "handleDeleteRange", "listen", "keyBinding", "arguments", "undefined", "warn", "Array", "isArray", "singleBinding", "push", "root", "addEventListener", "defaultPrevented", "isComposing", "keyCode", "concat", "matches", "filter", "blot", "find", "target", "getSelection", "hasFocus", "getLine", "leafStart", "offsetStart", "leafEnd", "offsetEnd", "prefixText", "TextBlot", "value", "slice", "suffixText", "curContext", "empty", "getFormat", "prevented", "every", "isEqual", "call", "preventDefault", "getLength", "delta", "Delta", "retain", "delete", "isPrevLineEmpty", "curFormats", "prevFormats", "formatDelta", "compose", "updateContents", "focus", "nextFormats", "lineFormats", "reduce", "Scope", "BLOCK", "insert", "bold", "italic", "underline", "outdent", "list", "tab", "history", "cutoff", "scrollSelectionIntoView", "header", "module", "getModule", "getTable", "shift", "blockquote", "trim", "numLines", "DEFAULTS", "normalize", "doc", "querySelector", "normalizeFontWeight", "normalizeEmptyLines", "normalWeightRegexp", "blockTagNames", "isBlockElement", "element", "includes", "tagName", "Array", "from", "querySelectorAll", "filter", "br", "previousElementSibling", "nextElementSibling", "forEach", "parentNode", "removeChild", "node", "getAttribute", "match", "fragment", "createDocumentFragment", "append", "childNodes", "replaceChild", "normalize", "doc", "documentElement", "getAttribute", "normalizeListItem", "ignoreRegexp", "idRegexp", "indentRegexp", "parseListItem", "element", "html", "style", "idMatch", "match", "id", "Number", "indentMatch", "indent", "typeRegexp", "RegExp", "typeMatch", "type", "msoList", "Array", "from", "querySelectorAll", "ignored", "others", "forEach", "node", "shouldIgnore", "push", "_a", "parentNode", "removeChild", "innerHTML", "listItems", "map", "filter", "parsed", "length", "childListItems", "current", "shift", "nextElementSibling", "ul", "document", "createElement", "listItem", "li", "setAttribute", "appendChild", "replaceChild", "slice", "_ref", "e", "NORMALIZERS", "normalizeExternalHTML", "msWord", "googleDocs", "doc", "documentElement", "forEach", "normalize", "applyFormat", "delta", "format", "value", "scroll", "query", "reduce", "newDelta", "op", "insert", "attributes", "push", "formats", "Delta", "deltaEndsWith", "text", "endText", "i", "ops", "length", "slice", "isLine", "node", "Element", "match", "prototype", "EmbedBlot", "includes", "tagName", "toLowerCase", "isBetweenInlineElements", "previousElementSibling", "nextElementSibling", "isPre", "preNodes", "has", "set", "parentNode", "get", "traverse", "elementMatchers", "textMatchers", "nodeMatches", "nodeType", "TEXT_NODE", "matcher", "ELEMENT_NODE", "Array", "from", "childNodes", "childNode", "childrenDelta", "reducedDelta", "concat", "createMatchAlias", "_node", "matchAttributor", "Attributor", "keys", "classes", "ClassAttributor", "styles", "StyleAttributor", "forEach", "name", "attr", "Scope", "ATTRIBUTE", "attrName", "ATTRIBUTE_ATTRIBUTORS", "keyName", "undefined", "STYLE_ATTRIBUTORS", "Object", "entries", "_ref4", "matchBlot", "embed", "blotName", "BlockBlot", "matchBreak", "matchCodeBlock", "language", "matchIgnore", "matchIndent", "indent", "parent", "composed", "matchList", "element", "list", "checkedAttr", "getAttribute", "matchNewline", "HTMLParagraphElement", "nextSibling", "BlockEmbed", "firstChild", "matchStyles", "style", "fontStyle", "italic", "textDecoration", "underline", "strike", "fontWeight", "startsWith", "parseInt", "bold", "_ref5", "parseFloat", "textIndent", "matchTable", "table", "parentElement", "rows", "querySelectorAll", "row", "indexOf", "matchText", "data", "trim", "replace", "previousSibling", "replaceAll", "import_quill_delta", "debug", "CLIPBOARD_CONFIG", "Clipboard", "logger", "Node", "AlignAttribute", "DirectionAttribute", "memo", "AlignStyle", "BackgroundStyle", "ColorStyle", "DirectionStyle", "FontStyle", "SizeStyle", "Module", "constructor", "quill", "options", "root", "addEventListener", "e", "onCaptureCopy", "onCapturePaste", "bind", "matchers", "_ref", "selector", "addMatcher", "convert", "_ref2", "html", "arguments", "CodeBlock", "convertHTML", "compose", "retain", "delete", "normalizeHTML", "doc", "normalizeExternalHTML", "DOMParser", "parseFromString", "container", "body", "WeakMap", "prepareMatching", "dangerouslyPasteHTML", "index", "source", "Quill", "sources", "API", "setContents", "setSelection", "SILENT", "paste", "updateContents", "isCut", "defaultPrevented", "preventDefault", "range", "selection", "getRange", "onCopy", "clipboardData", "setData", "deleteRange", "normalizeURIList", "urlList", "split", "filter", "url", "join", "isEnabled", "getSelection", "getData", "files", "uploader", "upload", "childElementCount", "firstElementChild", "onPaste", "getText", "getSemanticHTML", "_ref3", "getFormat", "pastedDelta", "log", "USER", "scrollSelectionIntoView", "pair", "matches", "DEFAULTS", "transformStack", "stack", "delta", "remoteDelta", "i", "length", "oldItem", "transform", "range", "transformRange", "splice", "endsWithNewlineChange", "scroll", "lastOp", "ops", "insert", "endsWith", "attributes", "Object", "keys", "some", "attr", "query", "Scope", "BLOCK", "getLastChangeIndex", "deleteLength", "reduce", "op", "delete", "changeIndex", "start", "transformPosition", "index", "end", "History", "Module", "constructor", "quill", "options", "lastRecorded", "ignoreChange", "undo", "redo", "currentRange", "on", "Quill", "events", "EDITOR_CHANGE", "eventName", "value", "oldValue", "source", "SELECTION_CHANGE", "sources", "SILENT", "TEXT_CHANGE", "userOnly", "USER", "record", "keyboard", "addBinding", "key", "shortKey", "bind", "shiftKey", "test", "navigator", "platform", "root", "addEventListener", "event", "inputType", "preventDefault", "change", "dest", "item", "pop", "base", "getContents", "inverseDelta", "invert", "push", "updateContents", "restoreSelection", "clear", "cutoff", "changeDelta", "oldDelta", "undoDelta", "undoRange", "timestamp", "Date", "now", "delay", "compose", "maxStack", "shift", "stackItem", "setSelection", "DEFAULTS", "import_quill_delta", "Uploader", "Module", "constructor", "quill", "options", "root", "addEventListener", "e", "preventDefault", "native", "document", "caretRangeFromPoint", "clientX", "clientY", "caretPositionFromPoint", "position", "createRange", "setStart", "offsetNode", "offset", "setEnd", "normalized", "selection", "normalizeNative", "range", "normalizedToRange", "dataTransfer", "files", "upload", "uploads", "Array", "from", "forEach", "file", "mimetypes", "includes", "type", "push", "length", "handler", "call", "DEFAULTS", "scroll", "query", "promises", "map", "Promise", "resolve", "reader", "FileReader", "onload", "result", "readAsDataURL", "all", "then", "images", "update", "reduce", "delta", "image", "insert", "Delta", "retain", "index", "delete", "updateContents", "Emitter", "sources", "USER", "setSelection", "SILENT", "getPlainTextFromInputEvent", "event", "data", "dataTransfer", "types", "includes", "getData", "import_quill_delta", "INSERT_TYPES", "Input", "Module", "constructor", "quill", "options", "root", "addEventListener", "handleBeforeInput", "test", "navigator", "userAgent", "on", "Quill", "events", "COMPOSITION_BEFORE_START", "handleCompositionStart", "deleteRange", "range", "replaceText", "text", "arguments", "length", "undefined", "formats", "getFormat", "index", "updateContents", "Delta", "retain", "insert", "sources", "USER", "setSelection", "SILENT", "composition", "isComposing", "defaultPrevented", "inputType", "staticRange", "getTargetRanges", "collapsed", "normalized", "selection", "normalizeNative", "normalizedToRange", "preventDefault", "getSelection", "isMac", "TTL_FOR_VALID_SELECTION_CHANGE", "canMoveCaretBeforeUINode", "UINode", "test", "navigator", "platform", "event", "key", "ctrlKey", "Module", "constructor", "quill", "options", "isListening", "selectionChangeDeadline", "handleArrowKeys", "handleNavigationShortcuts", "keyboard", "addBinding", "offset", "shiftKey", "handler", "range", "_ref", "line", "ParentBlot", "uiNode", "isRTL", "getComputedStyle", "domNode", "setSelection", "index", "length", "Quill", "sources", "USER", "root", "addEventListener", "defaultPrevented", "ensureListeningToSelectionChange", "Date", "now", "listener", "handleSelectionChange", "document", "once", "selection", "getSelection", "getRangeAt", "collapsed", "startOffset", "scroll", "find", "startContainer", "newRange", "createRange", "setStartAfter", "setEndAfter", "removeAllRanges", "addRange", "import_quill_delta", "Quill", "register", "Block", "BlockEmbed", "Break", "Container", "Cursor", "Embed", "Inline", "Scroll", "TextBlot", "Clipboard", "History", "Keyboard", "Uploader", "Input", "UINode", "IndentAttributor", "IndentClass", "ClassAttributor", "add", "node", "value", "normalizedValue", "indent", "remove", "toString", "canAdd", "parseInt", "undefined", "scope", "Scope", "BLOCK", "whitelist", "Blockquote", "Block", "blotName", "tagName", "Header", "Block", "formats", "domNode", "tagName", "indexOf", "blotName", "ListContainer", "ListItem", "Container", "blotName", "tagName", "Block", "create", "value", "node", "setAttribute", "formats", "domNode", "getAttribute", "undefined", "register", "Quill", "constructor", "scroll", "ui", "ownerDocument", "createElement", "listEventHandler", "e", "isEnabled", "format", "statics", "preventDefault", "addEventListener", "attachUI", "name", "allowedChildren", "requiredContainer", "Bold", "Inline", "create", "formats", "optimize", "context", "domNode", "tagName", "statics", "replaceWith", "blotName", "Italic", "Bold", "blotName", "tagName", "sanitize", "url", "protocols", "anchor", "document", "createElement", "href", "protocol", "slice", "indexOf", "Link", "Inline", "create", "value", "node", "setAttribute", "formats", "domNode", "getAttribute", "PROTOCOL_WHITELIST", "SANITIZED_URL", "format", "name", "statics", "blotName", "constructor", "tagName", "Script", "Inline", "create", "value", "document", "createElement", "formats", "domNode", "tagName", "undefined", "blotName", "Strike", "Bold", "blotName", "tagName", "Underline", "Inline", "blotName", "tagName", "Formula", "Embed", "create", "value", "window", "katex", "Error", "node", "render", "throwOnError", "errorColor", "setAttribute", "domNode", "getAttribute", "html", "formula", "blotName", "className", "tagName", "ATTRIBUTES", "Image", "EmbedBlot", "create", "value", "node", "setAttribute", "sanitize", "formats", "domNode", "reduce", "attribute", "hasAttribute", "getAttribute", "match", "url", "test", "format", "name", "indexOf", "removeAttribute", "blotName", "tagName", "ATTRIBUTES", "Video", "BlockEmbed", "create", "value", "node", "setAttribute", "sanitize", "formats", "domNode", "reduce", "attribute", "hasAttribute", "getAttribute", "url", "Link", "format", "name", "indexOf", "removeAttribute", "html", "video", "blotName", "className", "tagName", "import_quill_delta", "TokenAttributor", "CodeToken", "SyntaxCodeBlock", "SyntaxCodeBlockContainer", "highlight", "Syntax", "ClassAttributor", "scope", "Scope", "INLINE", "Inline", "formats", "node", "scroll", "domNode", "classList", "contains", "CodeBlock", "className", "parentNode", "undefined", "constructor", "value", "add", "format", "blotName", "remove", "statics", "optimize", "arguments", "unwrap", "create", "setAttribute", "getAttribute", "register", "name", "replaceWith", "formatAt", "length", "CodeBlockContainer", "attach", "forceNext", "emitMount", "children", "forEach", "child", "index", "forced", "head", "nodes", "Array", "from", "childNodes", "filter", "uiNode", "text", "map", "textContent", "join", "language", "cachedText", "trim", "oldDelta", "reduce", "delta", "concat", "blockDelta", "Delta", "diff", "_ref", "retain", "attributes", "Object", "keys", "includes", "html", "codeBlock", "find", "escapeText", "code", "context", "parent", "allowedChildren", "requiredContainer", "CursorBlot", "TextBlot", "BreakBlot", "lib", "versionString", "majorVersion", "split", "parseInt", "Module", "Quill", "quill", "options", "hljs", "Error", "languages", "memo", "_ref2", "key", "highlightBlot", "bind", "initListener", "initTimer", "on", "events", "SCROLL_BLOT_MOUNT", "blot", "select", "root", "ownerDocument", "createElement", "_ref3", "label", "option", "appendChild", "addEventListener", "focus", "attachUI", "timer", "SCROLL_OPTIMIZE", "clearTimeout", "setTimeout", "interval", "force", "selection", "composing", "update", "sources", "USER", "range", "getSelection", "blots", "descendants", "container", "SILENT", "setSelection", "line", "i", "insert", "innerHTML", "traverse", "compose", "data", "nodeText", "WeakMap", "DEFAULTS", "window", "addButton", "container", "format", "value", "input", "document", "createElement", "setAttribute", "classList", "add", "appendChild", "addControls", "groups", "Array", "isArray", "forEach", "controls", "group", "control", "Object", "keys", "addSelect", "values", "option", "String", "import_quill_delta", "debug", "Toolbar", "logger", "Module", "constructor", "quill", "options", "parentNode", "insertBefore", "querySelector", "HTMLElement", "error", "handlers", "_a", "handler", "addHandler", "from", "querySelectorAll", "attach", "on", "Quill", "events", "EDITOR_CHANGE", "range", "selection", "getRange", "update", "find", "className", "indexOf", "slice", "length", "tagName", "scroll", "query", "warn", "eventName", "addEventListener", "e", "selectedIndex", "selected", "hasAttribute", "contains", "preventDefault", "focus", "call", "prototype", "EmbedBlot", "prompt", "updateContents", "Delta", "retain", "index", "delete", "insert", "sources", "USER", "push", "formats", "getFormat", "pair", "replace", "remove", "isActive", "getAttribute", "toString", "toggle", "DEFAULTS", "clean", "getSelection", "name", "Scope", "INLINE", "removeFormat", "direction", "align", "indent", "parseInt", "modifier", "link", "list", "align", "alignLeftIcon", "center", "alignCenterIcon", "right", "alignRightIcon", "justify", "alignJustifyIcon", "background", "backgroundIcon", "blockquote", "blockquoteIcon", "bold", "boldIcon", "clean", "cleanIcon", "code", "codeIcon", "color", "colorIcon", "direction", "directionLeftToRightIcon", "rtl", "directionRightToLeftIcon", "formula", "formulaIcon", "header", "headerIcon", "header2Icon", "header3Icon", "header4Icon", "header5Icon", "header6Icon", "italic", "italicIcon", "image", "imageIcon", "indent", "indentIcon", "outdentIcon", "link", "linkIcon", "list", "bullet", "listBulletIcon", "check", "listCheckIcon", "ordered", "listOrderedIcon", "script", "sub", "subscriptIcon", "super", "superscriptIcon", "strike", "strikeIcon", "table", "tableIcon", "underline", "underlineIcon", "video", "videoIcon", "toggleAriaAttribute", "element", "attribute", "setAttribute", "getAttribute", "optionsCounter", "Picker", "constructor", "select", "container", "document", "createElement", "buildPicker", "style", "display", "parentNode", "insertBefore", "label", "addEventListener", "togglePicker", "event", "key", "escape", "preventDefault", "update", "bind", "classList", "toggle", "options", "buildItem", "option", "item", "tabIndex", "add", "value", "textContent", "selectItem", "buildLabel", "innerHTML", "DropdownIcon", "appendChild", "buildOptions", "id", "Array", "from", "forEach", "selected", "attributes", "name", "close", "setTimeout", "focus", "remove", "trigger", "arguments", "length", "undefined", "querySelector", "selectedIndex", "children", "indexOf", "hasAttribute", "removeAttribute", "dispatchEvent", "Event", "isActive", "ColorPicker", "Picker", "constructor", "select", "label", "innerHTML", "container", "classList", "add", "Array", "from", "querySelectorAll", "slice", "forEach", "item", "buildItem", "option", "style", "backgroundColor", "getAttribute", "selectItem", "trigger", "colorLabel", "querySelector", "value", "tagName", "stroke", "fill", "IconPicker", "Picker", "constructor", "select", "icons", "container", "classList", "add", "Array", "from", "querySelectorAll", "forEach", "item", "innerHTML", "getAttribute", "defaultItem", "querySelector", "selectItem", "target", "trigger", "label", "isScrollable", "Tooltip", "el", "overflowY", "getComputedStyle", "constructor", "quill", "boundsContainer", "document", "body", "root", "addContainer", "innerHTML", "TEMPLATE", "addEventListener", "style", "marginTop", "scrollTop", "hide", "classList", "add", "position", "reference", "left", "width", "offsetWidth", "top", "bottom", "remove", "containerBounds", "getBoundingClientRect", "rootBounds", "shift", "right", "height", "verticalShift", "show", "extractVideoUrl", "url", "match", "fillSelect", "select", "values", "defaultValue", "arguments", "length", "undefined", "forEach", "value", "option", "document", "createElement", "setAttribute", "String", "appendChild", "ALIGNS", "COLORS", "FONTS", "HEADERS", "SIZES", "BaseTheme", "BaseTooltip", "Theme", "constructor", "quill", "options", "listener", "e", "body", "contains", "root", "removeEventListener", "tooltip", "target", "activeElement", "textbox", "hasFocus", "hide", "pickers", "picker", "container", "close", "emitter", "listenDOM", "addModule", "name", "module", "extendToolbar", "buildButtons", "buttons", "icons", "Array", "from", "button", "className", "getAttribute", "split", "startsWith", "slice", "innerHTML", "rtl", "buildPickers", "selects", "map", "classList", "querySelector", "align", "IconPicker", "format", "ColorPicker", "Picker", "update", "on", "Emitter", "events", "EDITOR_CHANGE", "DEFAULTS", "merge", "modules", "toolbar", "handlers", "formula", "theme", "edit", "image", "fileInput", "uploader", "mimetypes", "join", "add", "addEventListener", "range", "getSelection", "upload", "files", "click", "video", "Tooltip", "boundsContainer", "listen", "event", "key", "save", "preventDefault", "cancel", "restoreFocus", "mode", "preview", "remove", "bounds", "getBounds", "selection", "savedRange", "position", "focus", "preventScroll", "scrollTop", "linkRange", "formatText", "sources", "USER", "index", "insertEmbed", "insertText", "setSelection", "TOOLBAR_CONFIG", "BubbleTooltip", "BubbleTheme", "header", "BaseTooltip", "constructor", "quill", "bounds", "on", "Emitter", "events", "EDITOR_CHANGE", "type", "range", "oldRange", "source", "SELECTION_CHANGE", "length", "sources", "USER", "show", "root", "style", "left", "width", "offsetWidth", "lines", "getLines", "index", "getBounds", "position", "lastLine", "getIndex", "Math", "min", "indexBounds", "Range", "document", "activeElement", "textbox", "hasFocus", "hide", "listen", "querySelector", "addEventListener", "classList", "remove", "SCROLL_OPTIMIZE", "setTimeout", "contains", "getSelection", "cancel", "reference", "shift", "arrow", "marginLeft", "TEMPLATE", "join", "BaseTheme", "options", "modules", "toolbar", "container", "add", "extendToolbar", "tooltip", "appendChild", "buildButtons", "querySelectorAll", "icons", "buildPickers", "DEFAULTS", "merge", "handlers", "link", "value", "format", "Quill", "theme", "edit", "TOOLBAR_CONFIG", "SnowTooltip", "SnowTheme", "header", "list", "BaseTooltip", "preview", "root", "querySelector", "listen", "addEventListener", "event", "classList", "contains", "save", "edit", "textContent", "preventDefault", "linkRange", "range", "restoreFocus", "quill", "formatText", "Emitter", "sources", "USER", "hide", "on", "events", "SELECTION_CHANGE", "oldRange", "source", "length", "link", "offset", "scroll", "descendant", "LinkBlot", "index", "Range", "formats", "domNode", "setAttribute", "show", "bounds", "getBounds", "position", "removeAttribute", "TEMPLATE", "join", "BaseTheme", "constructor", "options", "modules", "toolbar", "container", "add", "extendToolbar", "buildButtons", "querySelectorAll", "icons", "buildPickers", "tooltip", "keyboard", "addBinding", "key", "shortKey", "_range", "context", "handlers", "call", "format", "DEFAULTS", "merge", "value", "getSelection", "getText", "test", "indexOf", "theme", "Quill", "Delta", "init_quill", "Quill", "register", "DirectionAttribute", "AlignClass", "BackgroundClass", "ColorClass", "DirectionClass", "FontClass", "SizeClass", "AlignStyle", "BackgroundStyle", "ColorStyle", "DirectionStyle", "FontStyle", "SizeStyle", "Indent", "Blockquote", "CodeBlock", "Header", "List", "Bold", "InlineCode", "Italic", "Link", "Script", "Strike", "Underline", "Formula", "Image", "Video", "Syntax", "Table", "Toolbar", "BubbleTheme", "SnowTheme", "Icons", "Picker", "IconPicker", "ColorPicker", "Tooltip"]
}
